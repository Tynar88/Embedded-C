
009_struct_exercise.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001620  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d4  080017d0  080017d0  000117d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080019a4  080019a4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080019a4  080019a4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080019a4  080019a4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080019a4  080019a4  000119a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080019a8  080019a8  000119a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080019ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a62  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000360  00000000  00000000  00020af6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00020e58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00020f70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002abb  00000000  00000000  00021050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001433  00000000  00000000  00023b0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000093fb  00000000  00000000  00024f3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e339  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c70  00000000  00000000  0002e38c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080017b8 	.word	0x080017b8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080017b8 	.word	0x080017b8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
	uint8_t status;
	uint8_t crc;
} PACKET_t;

int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b086      	sub	sp, #24
 8000294:	af00      	add	r7, sp, #0
	uint32_t packet_value;
	printf("Enter the 32bit packet value: 0x");
 8000296:	4840      	ldr	r0, [pc, #256]	; (8000398 <main+0x108>)
 8000298:	f000 f9d0 	bl	800063c <iprintf>
	//scanf("%X",&packet_value);
	packet_value = (uint32_t)0x03FF1234;
 800029c:	4b3f      	ldr	r3, [pc, #252]	; (800039c <main+0x10c>)
 800029e:	617b      	str	r3, [r7, #20]
	printf("%lX\n\n\n",packet_value);
 80002a0:	6979      	ldr	r1, [r7, #20]
 80002a2:	483f      	ldr	r0, [pc, #252]	; (80003a0 <main+0x110>)
 80002a4:	f000 f9ca 	bl	800063c <iprintf>
	printf("The 32bit packet value is: 0x%lX\n\n\n",packet_value);
 80002a8:	6979      	ldr	r1, [r7, #20]
 80002aa:	483e      	ldr	r0, [pc, #248]	; (80003a4 <main+0x114>)
 80002ac:	f000 f9c6 	bl	800063c <iprintf>

	PACKET_t packet_struct;
	PACKET_t *pPacket_struct = &packet_struct; 		// pointer of struct
 80002b0:	1d3b      	adds	r3, r7, #4
 80002b2:	613b      	str	r3, [r7, #16]


	// (xxx >> No.) | No = Sum of all previous lengths
	pPacket_struct->addr_mode = (packet_value >> (32-1)) & 0x1; // Length 1 Bit
 80002b4:	697b      	ldr	r3, [r7, #20]
 80002b6:	0fdb      	lsrs	r3, r3, #31
 80002b8:	b2da      	uxtb	r2, r3
 80002ba:	693b      	ldr	r3, [r7, #16]
 80002bc:	701a      	strb	r2, [r3, #0]
	pPacket_struct->short_addr = (packet_value >> (31-2)) & 0x3; // Length 2 Bit
 80002be:	697b      	ldr	r3, [r7, #20]
 80002c0:	0f5b      	lsrs	r3, r3, #29
 80002c2:	b2db      	uxtb	r3, r3
 80002c4:	f003 0303 	and.w	r3, r3, #3
 80002c8:	b2da      	uxtb	r2, r3
 80002ca:	693b      	ldr	r3, [r7, #16]
 80002cc:	705a      	strb	r2, [r3, #1]
	pPacket_struct->long_addr = (packet_value >> (29-8)) & 0xFF; // Length 8 Bit
 80002ce:	697b      	ldr	r3, [r7, #20]
 80002d0:	0d5b      	lsrs	r3, r3, #21
 80002d2:	b2da      	uxtb	r2, r3
 80002d4:	693b      	ldr	r3, [r7, #16]
 80002d6:	709a      	strb	r2, [r3, #2]
	pPacket_struct->sensor = (packet_value >> (21-3)) & 0x7; // Length 3 Bit
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	0c9b      	lsrs	r3, r3, #18
 80002dc:	b2db      	uxtb	r3, r3
 80002de:	f003 0307 	and.w	r3, r3, #7
 80002e2:	b2da      	uxtb	r2, r3
 80002e4:	693b      	ldr	r3, [r7, #16]
 80002e6:	70da      	strb	r2, [r3, #3]

	pPacket_struct->bat = (packet_value >> (18-3)) & 0x7; // Length 3 Bit
 80002e8:	697b      	ldr	r3, [r7, #20]
 80002ea:	0bdb      	lsrs	r3, r3, #15
 80002ec:	b2db      	uxtb	r3, r3
 80002ee:	f003 0307 	and.w	r3, r3, #7
 80002f2:	b2da      	uxtb	r2, r3
 80002f4:	693b      	ldr	r3, [r7, #16]
 80002f6:	711a      	strb	r2, [r3, #4]
	pPacket_struct->payload = (packet_value >> (15-12)) & 0xFFF; // Length 12 Bit
 80002f8:	697b      	ldr	r3, [r7, #20]
 80002fa:	08db      	lsrs	r3, r3, #3
 80002fc:	b29b      	uxth	r3, r3
 80002fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000302:	b29a      	uxth	r2, r3
 8000304:	693b      	ldr	r3, [r7, #16]
 8000306:	80da      	strh	r2, [r3, #6]
	pPacket_struct->status = (packet_value >> (3-1)) & 0x1; // Length 1 Bit
 8000308:	697b      	ldr	r3, [r7, #20]
 800030a:	089b      	lsrs	r3, r3, #2
 800030c:	b2db      	uxtb	r3, r3
 800030e:	f003 0301 	and.w	r3, r3, #1
 8000312:	b2da      	uxtb	r2, r3
 8000314:	693b      	ldr	r3, [r7, #16]
 8000316:	721a      	strb	r2, [r3, #8]
	pPacket_struct->crc = (packet_value >> (2-2)) & 0x3; // Length 2 Bit
 8000318:	697b      	ldr	r3, [r7, #20]
 800031a:	b2db      	uxtb	r3, r3
 800031c:	f003 0303 	and.w	r3, r3, #3
 8000320:	b2da      	uxtb	r2, r3
 8000322:	693b      	ldr	r3, [r7, #16]
 8000324:	725a      	strb	r2, [r3, #9]

	printf("Value of addr_mode is:  0x%X\n",pPacket_struct->addr_mode);
 8000326:	693b      	ldr	r3, [r7, #16]
 8000328:	781b      	ldrb	r3, [r3, #0]
 800032a:	4619      	mov	r1, r3
 800032c:	481e      	ldr	r0, [pc, #120]	; (80003a8 <main+0x118>)
 800032e:	f000 f985 	bl	800063c <iprintf>
	printf("Value of short_addr is: 0x%X\n",pPacket_struct->short_addr);
 8000332:	693b      	ldr	r3, [r7, #16]
 8000334:	785b      	ldrb	r3, [r3, #1]
 8000336:	4619      	mov	r1, r3
 8000338:	481c      	ldr	r0, [pc, #112]	; (80003ac <main+0x11c>)
 800033a:	f000 f97f 	bl	800063c <iprintf>
	printf("Value of long_addr is:  0x%X\n",pPacket_struct->long_addr);
 800033e:	693b      	ldr	r3, [r7, #16]
 8000340:	789b      	ldrb	r3, [r3, #2]
 8000342:	4619      	mov	r1, r3
 8000344:	481a      	ldr	r0, [pc, #104]	; (80003b0 <main+0x120>)
 8000346:	f000 f979 	bl	800063c <iprintf>
	printf("Value of sensor is:     0x%X\n",pPacket_struct->sensor);
 800034a:	693b      	ldr	r3, [r7, #16]
 800034c:	78db      	ldrb	r3, [r3, #3]
 800034e:	4619      	mov	r1, r3
 8000350:	4818      	ldr	r0, [pc, #96]	; (80003b4 <main+0x124>)
 8000352:	f000 f973 	bl	800063c <iprintf>
	printf("Value of bat is: 		0x%X\n",pPacket_struct->bat);
 8000356:	693b      	ldr	r3, [r7, #16]
 8000358:	791b      	ldrb	r3, [r3, #4]
 800035a:	4619      	mov	r1, r3
 800035c:	4816      	ldr	r0, [pc, #88]	; (80003b8 <main+0x128>)
 800035e:	f000 f96d 	bl	800063c <iprintf>
	printf("Value of payload is: 	0x%X\n",pPacket_struct->payload);
 8000362:	693b      	ldr	r3, [r7, #16]
 8000364:	88db      	ldrh	r3, [r3, #6]
 8000366:	4619      	mov	r1, r3
 8000368:	4814      	ldr	r0, [pc, #80]	; (80003bc <main+0x12c>)
 800036a:	f000 f967 	bl	800063c <iprintf>
	printf("Value of status is: 	0x%X\n",pPacket_struct->status);
 800036e:	693b      	ldr	r3, [r7, #16]
 8000370:	7a1b      	ldrb	r3, [r3, #8]
 8000372:	4619      	mov	r1, r3
 8000374:	4812      	ldr	r0, [pc, #72]	; (80003c0 <main+0x130>)
 8000376:	f000 f961 	bl	800063c <iprintf>
	printf("Value of crc is: 		%#X\n",pPacket_struct->crc);
 800037a:	693b      	ldr	r3, [r7, #16]
 800037c:	7a5b      	ldrb	r3, [r3, #9]
 800037e:	4619      	mov	r1, r3
 8000380:	4810      	ldr	r0, [pc, #64]	; (80003c4 <main+0x134>)
 8000382:	f000 f95b 	bl	800063c <iprintf>

	getchar();getchar();
 8000386:	f000 f91b 	bl	80005c0 <getchar>
 800038a:	f000 f919 	bl	80005c0 <getchar>
	return 0;
 800038e:	2300      	movs	r3, #0
}
 8000390:	4618      	mov	r0, r3
 8000392:	3718      	adds	r7, #24
 8000394:	46bd      	mov	sp, r7
 8000396:	bd80      	pop	{r7, pc}
 8000398:	080017d0 	.word	0x080017d0
 800039c:	03ff1234 	.word	0x03ff1234
 80003a0:	080017f4 	.word	0x080017f4
 80003a4:	080017fc 	.word	0x080017fc
 80003a8:	08001820 	.word	0x08001820
 80003ac:	08001840 	.word	0x08001840
 80003b0:	08001860 	.word	0x08001860
 80003b4:	08001880 	.word	0x08001880
 80003b8:	080018a0 	.word	0x080018a0
 80003bc:	080018bc 	.word	0x080018bc
 80003c0:	080018d8 	.word	0x080018d8
 80003c4:	080018f4 	.word	0x080018f4

080003c8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	4603      	mov	r3, r0
 80003d0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003d2:	4b0f      	ldr	r3, [pc, #60]	; (8000410 <ITM_SendChar+0x48>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a0e      	ldr	r2, [pc, #56]	; (8000410 <ITM_SendChar+0x48>)
 80003d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003dc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003de:	4b0d      	ldr	r3, [pc, #52]	; (8000414 <ITM_SendChar+0x4c>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	4a0c      	ldr	r2, [pc, #48]	; (8000414 <ITM_SendChar+0x4c>)
 80003e4:	f043 0301 	orr.w	r3, r3, #1
 80003e8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ea:	bf00      	nop
 80003ec:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	f003 0301 	and.w	r3, r3, #1
 80003f6:	2b00      	cmp	r3, #0
 80003f8:	d0f8      	beq.n	80003ec <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003fa:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003fe:	79fb      	ldrb	r3, [r7, #7]
 8000400:	6013      	str	r3, [r2, #0]
}
 8000402:	bf00      	nop
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr
 800040e:	bf00      	nop
 8000410:	e000edfc 	.word	0xe000edfc
 8000414:	e0000e00 	.word	0xe0000e00

08000418 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b086      	sub	sp, #24
 800041c:	af00      	add	r7, sp, #0
 800041e:	60f8      	str	r0, [r7, #12]
 8000420:	60b9      	str	r1, [r7, #8]
 8000422:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000424:	2300      	movs	r3, #0
 8000426:	617b      	str	r3, [r7, #20]
 8000428:	e00a      	b.n	8000440 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800042a:	f3af 8000 	nop.w
 800042e:	4601      	mov	r1, r0
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	1c5a      	adds	r2, r3, #1
 8000434:	60ba      	str	r2, [r7, #8]
 8000436:	b2ca      	uxtb	r2, r1
 8000438:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043a:	697b      	ldr	r3, [r7, #20]
 800043c:	3301      	adds	r3, #1
 800043e:	617b      	str	r3, [r7, #20]
 8000440:	697a      	ldr	r2, [r7, #20]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	429a      	cmp	r2, r3
 8000446:	dbf0      	blt.n	800042a <_read+0x12>
  }

  return len;
 8000448:	687b      	ldr	r3, [r7, #4]
}
 800044a:	4618      	mov	r0, r3
 800044c:	3718      	adds	r7, #24
 800044e:	46bd      	mov	sp, r7
 8000450:	bd80      	pop	{r7, pc}

08000452 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000452:	b580      	push	{r7, lr}
 8000454:	b086      	sub	sp, #24
 8000456:	af00      	add	r7, sp, #0
 8000458:	60f8      	str	r0, [r7, #12]
 800045a:	60b9      	str	r1, [r7, #8]
 800045c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045e:	2300      	movs	r3, #0
 8000460:	617b      	str	r3, [r7, #20]
 8000462:	e009      	b.n	8000478 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000464:	68bb      	ldr	r3, [r7, #8]
 8000466:	1c5a      	adds	r2, r3, #1
 8000468:	60ba      	str	r2, [r7, #8]
 800046a:	781b      	ldrb	r3, [r3, #0]
 800046c:	4618      	mov	r0, r3
 800046e:	f7ff ffab 	bl	80003c8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000472:	697b      	ldr	r3, [r7, #20]
 8000474:	3301      	adds	r3, #1
 8000476:	617b      	str	r3, [r7, #20]
 8000478:	697a      	ldr	r2, [r7, #20]
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	429a      	cmp	r2, r3
 800047e:	dbf1      	blt.n	8000464 <_write+0x12>
  }
  return len;
 8000480:	687b      	ldr	r3, [r7, #4]
}
 8000482:	4618      	mov	r0, r3
 8000484:	3718      	adds	r7, #24
 8000486:	46bd      	mov	sp, r7
 8000488:	bd80      	pop	{r7, pc}

0800048a <_close>:

int _close(int file)
{
 800048a:	b480      	push	{r7}
 800048c:	b083      	sub	sp, #12
 800048e:	af00      	add	r7, sp, #0
 8000490:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000492:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000496:	4618      	mov	r0, r3
 8000498:	370c      	adds	r7, #12
 800049a:	46bd      	mov	sp, r7
 800049c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a0:	4770      	bx	lr

080004a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004a2:	b480      	push	{r7}
 80004a4:	b083      	sub	sp, #12
 80004a6:	af00      	add	r7, sp, #0
 80004a8:	6078      	str	r0, [r7, #4]
 80004aa:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004ac:	683b      	ldr	r3, [r7, #0]
 80004ae:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004b2:	605a      	str	r2, [r3, #4]
  return 0;
 80004b4:	2300      	movs	r3, #0
}
 80004b6:	4618      	mov	r0, r3
 80004b8:	370c      	adds	r7, #12
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr

080004c2 <_isatty>:

int _isatty(int file)
{
 80004c2:	b480      	push	{r7}
 80004c4:	b083      	sub	sp, #12
 80004c6:	af00      	add	r7, sp, #0
 80004c8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004ca:	2301      	movs	r3, #1
}
 80004cc:	4618      	mov	r0, r3
 80004ce:	370c      	adds	r7, #12
 80004d0:	46bd      	mov	sp, r7
 80004d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d6:	4770      	bx	lr

080004d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004d8:	b480      	push	{r7}
 80004da:	b085      	sub	sp, #20
 80004dc:	af00      	add	r7, sp, #0
 80004de:	60f8      	str	r0, [r7, #12]
 80004e0:	60b9      	str	r1, [r7, #8]
 80004e2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004e4:	2300      	movs	r3, #0
}
 80004e6:	4618      	mov	r0, r3
 80004e8:	3714      	adds	r7, #20
 80004ea:	46bd      	mov	sp, r7
 80004ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f0:	4770      	bx	lr
	...

080004f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b086      	sub	sp, #24
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004fc:	4a14      	ldr	r2, [pc, #80]	; (8000550 <_sbrk+0x5c>)
 80004fe:	4b15      	ldr	r3, [pc, #84]	; (8000554 <_sbrk+0x60>)
 8000500:	1ad3      	subs	r3, r2, r3
 8000502:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000504:	697b      	ldr	r3, [r7, #20]
 8000506:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000508:	4b13      	ldr	r3, [pc, #76]	; (8000558 <_sbrk+0x64>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	2b00      	cmp	r3, #0
 800050e:	d102      	bne.n	8000516 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000510:	4b11      	ldr	r3, [pc, #68]	; (8000558 <_sbrk+0x64>)
 8000512:	4a12      	ldr	r2, [pc, #72]	; (800055c <_sbrk+0x68>)
 8000514:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000516:	4b10      	ldr	r3, [pc, #64]	; (8000558 <_sbrk+0x64>)
 8000518:	681a      	ldr	r2, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4413      	add	r3, r2
 800051e:	693a      	ldr	r2, [r7, #16]
 8000520:	429a      	cmp	r2, r3
 8000522:	d207      	bcs.n	8000534 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000524:	f000 f846 	bl	80005b4 <__errno>
 8000528:	4603      	mov	r3, r0
 800052a:	220c      	movs	r2, #12
 800052c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800052e:	f04f 33ff 	mov.w	r3, #4294967295
 8000532:	e009      	b.n	8000548 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000534:	4b08      	ldr	r3, [pc, #32]	; (8000558 <_sbrk+0x64>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800053a:	4b07      	ldr	r3, [pc, #28]	; (8000558 <_sbrk+0x64>)
 800053c:	681a      	ldr	r2, [r3, #0]
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	4413      	add	r3, r2
 8000542:	4a05      	ldr	r2, [pc, #20]	; (8000558 <_sbrk+0x64>)
 8000544:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000546:	68fb      	ldr	r3, [r7, #12]
}
 8000548:	4618      	mov	r0, r3
 800054a:	3718      	adds	r7, #24
 800054c:	46bd      	mov	sp, r7
 800054e:	bd80      	pop	{r7, pc}
 8000550:	20020000 	.word	0x20020000
 8000554:	00000400 	.word	0x00000400
 8000558:	20000080 	.word	0x20000080
 800055c:	20000098 	.word	0x20000098

08000560 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000560:	480d      	ldr	r0, [pc, #52]	; (8000598 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000562:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000564:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000568:	480c      	ldr	r0, [pc, #48]	; (800059c <LoopForever+0x6>)
  ldr r1, =_edata
 800056a:	490d      	ldr	r1, [pc, #52]	; (80005a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800056c:	4a0d      	ldr	r2, [pc, #52]	; (80005a4 <LoopForever+0xe>)
  movs r3, #0
 800056e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000570:	e002      	b.n	8000578 <LoopCopyDataInit>

08000572 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000572:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000574:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000576:	3304      	adds	r3, #4

08000578 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000578:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800057a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800057c:	d3f9      	bcc.n	8000572 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800057e:	4a0a      	ldr	r2, [pc, #40]	; (80005a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000580:	4c0a      	ldr	r4, [pc, #40]	; (80005ac <LoopForever+0x16>)
  movs r3, #0
 8000582:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000584:	e001      	b.n	800058a <LoopFillZerobss>

08000586 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000586:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000588:	3204      	adds	r2, #4

0800058a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800058a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800058c:	d3fb      	bcc.n	8000586 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800058e:	f000 f829 	bl	80005e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000592:	f7ff fe7d 	bl	8000290 <main>

08000596 <LoopForever>:

LoopForever:
  b LoopForever
 8000596:	e7fe      	b.n	8000596 <LoopForever>
  ldr   r0, =_estack
 8000598:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800059c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005a4:	080019ac 	.word	0x080019ac
  ldr r2, =_sbss
 80005a8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005ac:	20000094 	.word	0x20000094

080005b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b0:	e7fe      	b.n	80005b0 <ADC_IRQHandler>
	...

080005b4 <__errno>:
 80005b4:	4b01      	ldr	r3, [pc, #4]	; (80005bc <__errno+0x8>)
 80005b6:	6818      	ldr	r0, [r3, #0]
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	20000000 	.word	0x20000000

080005c0 <getchar>:
 80005c0:	4b07      	ldr	r3, [pc, #28]	; (80005e0 <getchar+0x20>)
 80005c2:	b510      	push	{r4, lr}
 80005c4:	681c      	ldr	r4, [r3, #0]
 80005c6:	b124      	cbz	r4, 80005d2 <getchar+0x12>
 80005c8:	69a3      	ldr	r3, [r4, #24]
 80005ca:	b913      	cbnz	r3, 80005d2 <getchar+0x12>
 80005cc:	4620      	mov	r0, r4
 80005ce:	f000 f8a5 	bl	800071c <__sinit>
 80005d2:	6861      	ldr	r1, [r4, #4]
 80005d4:	4620      	mov	r0, r4
 80005d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005da:	f000 b959 	b.w	8000890 <_getc_r>
 80005de:	bf00      	nop
 80005e0:	20000000 	.word	0x20000000

080005e4 <__libc_init_array>:
 80005e4:	b570      	push	{r4, r5, r6, lr}
 80005e6:	4d0d      	ldr	r5, [pc, #52]	; (800061c <__libc_init_array+0x38>)
 80005e8:	4c0d      	ldr	r4, [pc, #52]	; (8000620 <__libc_init_array+0x3c>)
 80005ea:	1b64      	subs	r4, r4, r5
 80005ec:	10a4      	asrs	r4, r4, #2
 80005ee:	2600      	movs	r6, #0
 80005f0:	42a6      	cmp	r6, r4
 80005f2:	d109      	bne.n	8000608 <__libc_init_array+0x24>
 80005f4:	4d0b      	ldr	r5, [pc, #44]	; (8000624 <__libc_init_array+0x40>)
 80005f6:	4c0c      	ldr	r4, [pc, #48]	; (8000628 <__libc_init_array+0x44>)
 80005f8:	f001 f8de 	bl	80017b8 <_init>
 80005fc:	1b64      	subs	r4, r4, r5
 80005fe:	10a4      	asrs	r4, r4, #2
 8000600:	2600      	movs	r6, #0
 8000602:	42a6      	cmp	r6, r4
 8000604:	d105      	bne.n	8000612 <__libc_init_array+0x2e>
 8000606:	bd70      	pop	{r4, r5, r6, pc}
 8000608:	f855 3b04 	ldr.w	r3, [r5], #4
 800060c:	4798      	blx	r3
 800060e:	3601      	adds	r6, #1
 8000610:	e7ee      	b.n	80005f0 <__libc_init_array+0xc>
 8000612:	f855 3b04 	ldr.w	r3, [r5], #4
 8000616:	4798      	blx	r3
 8000618:	3601      	adds	r6, #1
 800061a:	e7f2      	b.n	8000602 <__libc_init_array+0x1e>
 800061c:	080019a4 	.word	0x080019a4
 8000620:	080019a4 	.word	0x080019a4
 8000624:	080019a4 	.word	0x080019a4
 8000628:	080019a8 	.word	0x080019a8

0800062c <memset>:
 800062c:	4402      	add	r2, r0
 800062e:	4603      	mov	r3, r0
 8000630:	4293      	cmp	r3, r2
 8000632:	d100      	bne.n	8000636 <memset+0xa>
 8000634:	4770      	bx	lr
 8000636:	f803 1b01 	strb.w	r1, [r3], #1
 800063a:	e7f9      	b.n	8000630 <memset+0x4>

0800063c <iprintf>:
 800063c:	b40f      	push	{r0, r1, r2, r3}
 800063e:	4b0a      	ldr	r3, [pc, #40]	; (8000668 <iprintf+0x2c>)
 8000640:	b513      	push	{r0, r1, r4, lr}
 8000642:	681c      	ldr	r4, [r3, #0]
 8000644:	b124      	cbz	r4, 8000650 <iprintf+0x14>
 8000646:	69a3      	ldr	r3, [r4, #24]
 8000648:	b913      	cbnz	r3, 8000650 <iprintf+0x14>
 800064a:	4620      	mov	r0, r4
 800064c:	f000 f866 	bl	800071c <__sinit>
 8000650:	ab05      	add	r3, sp, #20
 8000652:	9a04      	ldr	r2, [sp, #16]
 8000654:	68a1      	ldr	r1, [r4, #8]
 8000656:	9301      	str	r3, [sp, #4]
 8000658:	4620      	mov	r0, r4
 800065a:	f000 fa1b 	bl	8000a94 <_vfiprintf_r>
 800065e:	b002      	add	sp, #8
 8000660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000664:	b004      	add	sp, #16
 8000666:	4770      	bx	lr
 8000668:	20000000 	.word	0x20000000

0800066c <std>:
 800066c:	2300      	movs	r3, #0
 800066e:	b510      	push	{r4, lr}
 8000670:	4604      	mov	r4, r0
 8000672:	e9c0 3300 	strd	r3, r3, [r0]
 8000676:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800067a:	6083      	str	r3, [r0, #8]
 800067c:	8181      	strh	r1, [r0, #12]
 800067e:	6643      	str	r3, [r0, #100]	; 0x64
 8000680:	81c2      	strh	r2, [r0, #14]
 8000682:	6183      	str	r3, [r0, #24]
 8000684:	4619      	mov	r1, r3
 8000686:	2208      	movs	r2, #8
 8000688:	305c      	adds	r0, #92	; 0x5c
 800068a:	f7ff ffcf 	bl	800062c <memset>
 800068e:	4b05      	ldr	r3, [pc, #20]	; (80006a4 <std+0x38>)
 8000690:	6263      	str	r3, [r4, #36]	; 0x24
 8000692:	4b05      	ldr	r3, [pc, #20]	; (80006a8 <std+0x3c>)
 8000694:	62a3      	str	r3, [r4, #40]	; 0x28
 8000696:	4b05      	ldr	r3, [pc, #20]	; (80006ac <std+0x40>)
 8000698:	62e3      	str	r3, [r4, #44]	; 0x2c
 800069a:	4b05      	ldr	r3, [pc, #20]	; (80006b0 <std+0x44>)
 800069c:	6224      	str	r4, [r4, #32]
 800069e:	6323      	str	r3, [r4, #48]	; 0x30
 80006a0:	bd10      	pop	{r4, pc}
 80006a2:	bf00      	nop
 80006a4:	08001095 	.word	0x08001095
 80006a8:	080010b7 	.word	0x080010b7
 80006ac:	080010ef 	.word	0x080010ef
 80006b0:	08001113 	.word	0x08001113

080006b4 <_cleanup_r>:
 80006b4:	4901      	ldr	r1, [pc, #4]	; (80006bc <_cleanup_r+0x8>)
 80006b6:	f000 b8cc 	b.w	8000852 <_fwalk_reent>
 80006ba:	bf00      	nop
 80006bc:	080013ed 	.word	0x080013ed

080006c0 <__sfmoreglue>:
 80006c0:	b570      	push	{r4, r5, r6, lr}
 80006c2:	2268      	movs	r2, #104	; 0x68
 80006c4:	1e4d      	subs	r5, r1, #1
 80006c6:	4355      	muls	r5, r2
 80006c8:	460e      	mov	r6, r1
 80006ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006ce:	f000 f943 	bl	8000958 <_malloc_r>
 80006d2:	4604      	mov	r4, r0
 80006d4:	b140      	cbz	r0, 80006e8 <__sfmoreglue+0x28>
 80006d6:	2100      	movs	r1, #0
 80006d8:	e9c0 1600 	strd	r1, r6, [r0]
 80006dc:	300c      	adds	r0, #12
 80006de:	60a0      	str	r0, [r4, #8]
 80006e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006e4:	f7ff ffa2 	bl	800062c <memset>
 80006e8:	4620      	mov	r0, r4
 80006ea:	bd70      	pop	{r4, r5, r6, pc}

080006ec <__sfp_lock_acquire>:
 80006ec:	4801      	ldr	r0, [pc, #4]	; (80006f4 <__sfp_lock_acquire+0x8>)
 80006ee:	f000 b910 	b.w	8000912 <__retarget_lock_acquire_recursive>
 80006f2:	bf00      	nop
 80006f4:	20000085 	.word	0x20000085

080006f8 <__sfp_lock_release>:
 80006f8:	4801      	ldr	r0, [pc, #4]	; (8000700 <__sfp_lock_release+0x8>)
 80006fa:	f000 b90b 	b.w	8000914 <__retarget_lock_release_recursive>
 80006fe:	bf00      	nop
 8000700:	20000085 	.word	0x20000085

08000704 <__sinit_lock_acquire>:
 8000704:	4801      	ldr	r0, [pc, #4]	; (800070c <__sinit_lock_acquire+0x8>)
 8000706:	f000 b904 	b.w	8000912 <__retarget_lock_acquire_recursive>
 800070a:	bf00      	nop
 800070c:	20000086 	.word	0x20000086

08000710 <__sinit_lock_release>:
 8000710:	4801      	ldr	r0, [pc, #4]	; (8000718 <__sinit_lock_release+0x8>)
 8000712:	f000 b8ff 	b.w	8000914 <__retarget_lock_release_recursive>
 8000716:	bf00      	nop
 8000718:	20000086 	.word	0x20000086

0800071c <__sinit>:
 800071c:	b510      	push	{r4, lr}
 800071e:	4604      	mov	r4, r0
 8000720:	f7ff fff0 	bl	8000704 <__sinit_lock_acquire>
 8000724:	69a3      	ldr	r3, [r4, #24]
 8000726:	b11b      	cbz	r3, 8000730 <__sinit+0x14>
 8000728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800072c:	f7ff bff0 	b.w	8000710 <__sinit_lock_release>
 8000730:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000734:	6523      	str	r3, [r4, #80]	; 0x50
 8000736:	4b13      	ldr	r3, [pc, #76]	; (8000784 <__sinit+0x68>)
 8000738:	4a13      	ldr	r2, [pc, #76]	; (8000788 <__sinit+0x6c>)
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	62a2      	str	r2, [r4, #40]	; 0x28
 800073e:	42a3      	cmp	r3, r4
 8000740:	bf04      	itt	eq
 8000742:	2301      	moveq	r3, #1
 8000744:	61a3      	streq	r3, [r4, #24]
 8000746:	4620      	mov	r0, r4
 8000748:	f000 f820 	bl	800078c <__sfp>
 800074c:	6060      	str	r0, [r4, #4]
 800074e:	4620      	mov	r0, r4
 8000750:	f000 f81c 	bl	800078c <__sfp>
 8000754:	60a0      	str	r0, [r4, #8]
 8000756:	4620      	mov	r0, r4
 8000758:	f000 f818 	bl	800078c <__sfp>
 800075c:	2200      	movs	r2, #0
 800075e:	60e0      	str	r0, [r4, #12]
 8000760:	2104      	movs	r1, #4
 8000762:	6860      	ldr	r0, [r4, #4]
 8000764:	f7ff ff82 	bl	800066c <std>
 8000768:	68a0      	ldr	r0, [r4, #8]
 800076a:	2201      	movs	r2, #1
 800076c:	2109      	movs	r1, #9
 800076e:	f7ff ff7d 	bl	800066c <std>
 8000772:	68e0      	ldr	r0, [r4, #12]
 8000774:	2202      	movs	r2, #2
 8000776:	2112      	movs	r1, #18
 8000778:	f7ff ff78 	bl	800066c <std>
 800077c:	2301      	movs	r3, #1
 800077e:	61a3      	str	r3, [r4, #24]
 8000780:	e7d2      	b.n	8000728 <__sinit+0xc>
 8000782:	bf00      	nop
 8000784:	0800190c 	.word	0x0800190c
 8000788:	080006b5 	.word	0x080006b5

0800078c <__sfp>:
 800078c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800078e:	4607      	mov	r7, r0
 8000790:	f7ff ffac 	bl	80006ec <__sfp_lock_acquire>
 8000794:	4b1e      	ldr	r3, [pc, #120]	; (8000810 <__sfp+0x84>)
 8000796:	681e      	ldr	r6, [r3, #0]
 8000798:	69b3      	ldr	r3, [r6, #24]
 800079a:	b913      	cbnz	r3, 80007a2 <__sfp+0x16>
 800079c:	4630      	mov	r0, r6
 800079e:	f7ff ffbd 	bl	800071c <__sinit>
 80007a2:	3648      	adds	r6, #72	; 0x48
 80007a4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80007a8:	3b01      	subs	r3, #1
 80007aa:	d503      	bpl.n	80007b4 <__sfp+0x28>
 80007ac:	6833      	ldr	r3, [r6, #0]
 80007ae:	b30b      	cbz	r3, 80007f4 <__sfp+0x68>
 80007b0:	6836      	ldr	r6, [r6, #0]
 80007b2:	e7f7      	b.n	80007a4 <__sfp+0x18>
 80007b4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80007b8:	b9d5      	cbnz	r5, 80007f0 <__sfp+0x64>
 80007ba:	4b16      	ldr	r3, [pc, #88]	; (8000814 <__sfp+0x88>)
 80007bc:	60e3      	str	r3, [r4, #12]
 80007be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80007c2:	6665      	str	r5, [r4, #100]	; 0x64
 80007c4:	f000 f8a4 	bl	8000910 <__retarget_lock_init_recursive>
 80007c8:	f7ff ff96 	bl	80006f8 <__sfp_lock_release>
 80007cc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80007d0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80007d4:	6025      	str	r5, [r4, #0]
 80007d6:	61a5      	str	r5, [r4, #24]
 80007d8:	2208      	movs	r2, #8
 80007da:	4629      	mov	r1, r5
 80007dc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007e0:	f7ff ff24 	bl	800062c <memset>
 80007e4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007e8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007ec:	4620      	mov	r0, r4
 80007ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007f0:	3468      	adds	r4, #104	; 0x68
 80007f2:	e7d9      	b.n	80007a8 <__sfp+0x1c>
 80007f4:	2104      	movs	r1, #4
 80007f6:	4638      	mov	r0, r7
 80007f8:	f7ff ff62 	bl	80006c0 <__sfmoreglue>
 80007fc:	4604      	mov	r4, r0
 80007fe:	6030      	str	r0, [r6, #0]
 8000800:	2800      	cmp	r0, #0
 8000802:	d1d5      	bne.n	80007b0 <__sfp+0x24>
 8000804:	f7ff ff78 	bl	80006f8 <__sfp_lock_release>
 8000808:	230c      	movs	r3, #12
 800080a:	603b      	str	r3, [r7, #0]
 800080c:	e7ee      	b.n	80007ec <__sfp+0x60>
 800080e:	bf00      	nop
 8000810:	0800190c 	.word	0x0800190c
 8000814:	ffff0001 	.word	0xffff0001

08000818 <_fwalk>:
 8000818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800081c:	460f      	mov	r7, r1
 800081e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000822:	2600      	movs	r6, #0
 8000824:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8000828:	f1b8 0801 	subs.w	r8, r8, #1
 800082c:	d505      	bpl.n	800083a <_fwalk+0x22>
 800082e:	6824      	ldr	r4, [r4, #0]
 8000830:	2c00      	cmp	r4, #0
 8000832:	d1f7      	bne.n	8000824 <_fwalk+0xc>
 8000834:	4630      	mov	r0, r6
 8000836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800083a:	89ab      	ldrh	r3, [r5, #12]
 800083c:	2b01      	cmp	r3, #1
 800083e:	d906      	bls.n	800084e <_fwalk+0x36>
 8000840:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000844:	3301      	adds	r3, #1
 8000846:	d002      	beq.n	800084e <_fwalk+0x36>
 8000848:	4628      	mov	r0, r5
 800084a:	47b8      	blx	r7
 800084c:	4306      	orrs	r6, r0
 800084e:	3568      	adds	r5, #104	; 0x68
 8000850:	e7ea      	b.n	8000828 <_fwalk+0x10>

08000852 <_fwalk_reent>:
 8000852:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000856:	4606      	mov	r6, r0
 8000858:	4688      	mov	r8, r1
 800085a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800085e:	2700      	movs	r7, #0
 8000860:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000864:	f1b9 0901 	subs.w	r9, r9, #1
 8000868:	d505      	bpl.n	8000876 <_fwalk_reent+0x24>
 800086a:	6824      	ldr	r4, [r4, #0]
 800086c:	2c00      	cmp	r4, #0
 800086e:	d1f7      	bne.n	8000860 <_fwalk_reent+0xe>
 8000870:	4638      	mov	r0, r7
 8000872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000876:	89ab      	ldrh	r3, [r5, #12]
 8000878:	2b01      	cmp	r3, #1
 800087a:	d907      	bls.n	800088c <_fwalk_reent+0x3a>
 800087c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000880:	3301      	adds	r3, #1
 8000882:	d003      	beq.n	800088c <_fwalk_reent+0x3a>
 8000884:	4629      	mov	r1, r5
 8000886:	4630      	mov	r0, r6
 8000888:	47c0      	blx	r8
 800088a:	4307      	orrs	r7, r0
 800088c:	3568      	adds	r5, #104	; 0x68
 800088e:	e7e9      	b.n	8000864 <_fwalk_reent+0x12>

08000890 <_getc_r>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	460c      	mov	r4, r1
 8000894:	4605      	mov	r5, r0
 8000896:	b118      	cbz	r0, 80008a0 <_getc_r+0x10>
 8000898:	6983      	ldr	r3, [r0, #24]
 800089a:	b90b      	cbnz	r3, 80008a0 <_getc_r+0x10>
 800089c:	f7ff ff3e 	bl	800071c <__sinit>
 80008a0:	4b18      	ldr	r3, [pc, #96]	; (8000904 <_getc_r+0x74>)
 80008a2:	429c      	cmp	r4, r3
 80008a4:	d11e      	bne.n	80008e4 <_getc_r+0x54>
 80008a6:	686c      	ldr	r4, [r5, #4]
 80008a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008aa:	07d8      	lsls	r0, r3, #31
 80008ac:	d405      	bmi.n	80008ba <_getc_r+0x2a>
 80008ae:	89a3      	ldrh	r3, [r4, #12]
 80008b0:	0599      	lsls	r1, r3, #22
 80008b2:	d402      	bmi.n	80008ba <_getc_r+0x2a>
 80008b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008b6:	f000 f82c 	bl	8000912 <__retarget_lock_acquire_recursive>
 80008ba:	6863      	ldr	r3, [r4, #4]
 80008bc:	3b01      	subs	r3, #1
 80008be:	2b00      	cmp	r3, #0
 80008c0:	6063      	str	r3, [r4, #4]
 80008c2:	da19      	bge.n	80008f8 <_getc_r+0x68>
 80008c4:	4628      	mov	r0, r5
 80008c6:	4621      	mov	r1, r4
 80008c8:	f000 fba8 	bl	800101c <__srget_r>
 80008cc:	4605      	mov	r5, r0
 80008ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008d0:	07da      	lsls	r2, r3, #31
 80008d2:	d405      	bmi.n	80008e0 <_getc_r+0x50>
 80008d4:	89a3      	ldrh	r3, [r4, #12]
 80008d6:	059b      	lsls	r3, r3, #22
 80008d8:	d402      	bmi.n	80008e0 <_getc_r+0x50>
 80008da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008dc:	f000 f81a 	bl	8000914 <__retarget_lock_release_recursive>
 80008e0:	4628      	mov	r0, r5
 80008e2:	bd38      	pop	{r3, r4, r5, pc}
 80008e4:	4b08      	ldr	r3, [pc, #32]	; (8000908 <_getc_r+0x78>)
 80008e6:	429c      	cmp	r4, r3
 80008e8:	d101      	bne.n	80008ee <_getc_r+0x5e>
 80008ea:	68ac      	ldr	r4, [r5, #8]
 80008ec:	e7dc      	b.n	80008a8 <_getc_r+0x18>
 80008ee:	4b07      	ldr	r3, [pc, #28]	; (800090c <_getc_r+0x7c>)
 80008f0:	429c      	cmp	r4, r3
 80008f2:	bf08      	it	eq
 80008f4:	68ec      	ldreq	r4, [r5, #12]
 80008f6:	e7d7      	b.n	80008a8 <_getc_r+0x18>
 80008f8:	6823      	ldr	r3, [r4, #0]
 80008fa:	1c5a      	adds	r2, r3, #1
 80008fc:	6022      	str	r2, [r4, #0]
 80008fe:	781d      	ldrb	r5, [r3, #0]
 8000900:	e7e5      	b.n	80008ce <_getc_r+0x3e>
 8000902:	bf00      	nop
 8000904:	08001930 	.word	0x08001930
 8000908:	08001950 	.word	0x08001950
 800090c:	08001910 	.word	0x08001910

08000910 <__retarget_lock_init_recursive>:
 8000910:	4770      	bx	lr

08000912 <__retarget_lock_acquire_recursive>:
 8000912:	4770      	bx	lr

08000914 <__retarget_lock_release_recursive>:
 8000914:	4770      	bx	lr
	...

08000918 <sbrk_aligned>:
 8000918:	b570      	push	{r4, r5, r6, lr}
 800091a:	4e0e      	ldr	r6, [pc, #56]	; (8000954 <sbrk_aligned+0x3c>)
 800091c:	460c      	mov	r4, r1
 800091e:	6831      	ldr	r1, [r6, #0]
 8000920:	4605      	mov	r5, r0
 8000922:	b911      	cbnz	r1, 800092a <sbrk_aligned+0x12>
 8000924:	f000 fba6 	bl	8001074 <_sbrk_r>
 8000928:	6030      	str	r0, [r6, #0]
 800092a:	4621      	mov	r1, r4
 800092c:	4628      	mov	r0, r5
 800092e:	f000 fba1 	bl	8001074 <_sbrk_r>
 8000932:	1c43      	adds	r3, r0, #1
 8000934:	d00a      	beq.n	800094c <sbrk_aligned+0x34>
 8000936:	1cc4      	adds	r4, r0, #3
 8000938:	f024 0403 	bic.w	r4, r4, #3
 800093c:	42a0      	cmp	r0, r4
 800093e:	d007      	beq.n	8000950 <sbrk_aligned+0x38>
 8000940:	1a21      	subs	r1, r4, r0
 8000942:	4628      	mov	r0, r5
 8000944:	f000 fb96 	bl	8001074 <_sbrk_r>
 8000948:	3001      	adds	r0, #1
 800094a:	d101      	bne.n	8000950 <sbrk_aligned+0x38>
 800094c:	f04f 34ff 	mov.w	r4, #4294967295
 8000950:	4620      	mov	r0, r4
 8000952:	bd70      	pop	{r4, r5, r6, pc}
 8000954:	2000008c 	.word	0x2000008c

08000958 <_malloc_r>:
 8000958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800095c:	1ccd      	adds	r5, r1, #3
 800095e:	f025 0503 	bic.w	r5, r5, #3
 8000962:	3508      	adds	r5, #8
 8000964:	2d0c      	cmp	r5, #12
 8000966:	bf38      	it	cc
 8000968:	250c      	movcc	r5, #12
 800096a:	2d00      	cmp	r5, #0
 800096c:	4607      	mov	r7, r0
 800096e:	db01      	blt.n	8000974 <_malloc_r+0x1c>
 8000970:	42a9      	cmp	r1, r5
 8000972:	d905      	bls.n	8000980 <_malloc_r+0x28>
 8000974:	230c      	movs	r3, #12
 8000976:	603b      	str	r3, [r7, #0]
 8000978:	2600      	movs	r6, #0
 800097a:	4630      	mov	r0, r6
 800097c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000980:	4e2e      	ldr	r6, [pc, #184]	; (8000a3c <_malloc_r+0xe4>)
 8000982:	f000 fdf9 	bl	8001578 <__malloc_lock>
 8000986:	6833      	ldr	r3, [r6, #0]
 8000988:	461c      	mov	r4, r3
 800098a:	bb34      	cbnz	r4, 80009da <_malloc_r+0x82>
 800098c:	4629      	mov	r1, r5
 800098e:	4638      	mov	r0, r7
 8000990:	f7ff ffc2 	bl	8000918 <sbrk_aligned>
 8000994:	1c43      	adds	r3, r0, #1
 8000996:	4604      	mov	r4, r0
 8000998:	d14d      	bne.n	8000a36 <_malloc_r+0xde>
 800099a:	6834      	ldr	r4, [r6, #0]
 800099c:	4626      	mov	r6, r4
 800099e:	2e00      	cmp	r6, #0
 80009a0:	d140      	bne.n	8000a24 <_malloc_r+0xcc>
 80009a2:	6823      	ldr	r3, [r4, #0]
 80009a4:	4631      	mov	r1, r6
 80009a6:	4638      	mov	r0, r7
 80009a8:	eb04 0803 	add.w	r8, r4, r3
 80009ac:	f000 fb62 	bl	8001074 <_sbrk_r>
 80009b0:	4580      	cmp	r8, r0
 80009b2:	d13a      	bne.n	8000a2a <_malloc_r+0xd2>
 80009b4:	6821      	ldr	r1, [r4, #0]
 80009b6:	3503      	adds	r5, #3
 80009b8:	1a6d      	subs	r5, r5, r1
 80009ba:	f025 0503 	bic.w	r5, r5, #3
 80009be:	3508      	adds	r5, #8
 80009c0:	2d0c      	cmp	r5, #12
 80009c2:	bf38      	it	cc
 80009c4:	250c      	movcc	r5, #12
 80009c6:	4629      	mov	r1, r5
 80009c8:	4638      	mov	r0, r7
 80009ca:	f7ff ffa5 	bl	8000918 <sbrk_aligned>
 80009ce:	3001      	adds	r0, #1
 80009d0:	d02b      	beq.n	8000a2a <_malloc_r+0xd2>
 80009d2:	6823      	ldr	r3, [r4, #0]
 80009d4:	442b      	add	r3, r5
 80009d6:	6023      	str	r3, [r4, #0]
 80009d8:	e00e      	b.n	80009f8 <_malloc_r+0xa0>
 80009da:	6822      	ldr	r2, [r4, #0]
 80009dc:	1b52      	subs	r2, r2, r5
 80009de:	d41e      	bmi.n	8000a1e <_malloc_r+0xc6>
 80009e0:	2a0b      	cmp	r2, #11
 80009e2:	d916      	bls.n	8000a12 <_malloc_r+0xba>
 80009e4:	1961      	adds	r1, r4, r5
 80009e6:	42a3      	cmp	r3, r4
 80009e8:	6025      	str	r5, [r4, #0]
 80009ea:	bf18      	it	ne
 80009ec:	6059      	strne	r1, [r3, #4]
 80009ee:	6863      	ldr	r3, [r4, #4]
 80009f0:	bf08      	it	eq
 80009f2:	6031      	streq	r1, [r6, #0]
 80009f4:	5162      	str	r2, [r4, r5]
 80009f6:	604b      	str	r3, [r1, #4]
 80009f8:	4638      	mov	r0, r7
 80009fa:	f104 060b 	add.w	r6, r4, #11
 80009fe:	f000 fdc1 	bl	8001584 <__malloc_unlock>
 8000a02:	f026 0607 	bic.w	r6, r6, #7
 8000a06:	1d23      	adds	r3, r4, #4
 8000a08:	1af2      	subs	r2, r6, r3
 8000a0a:	d0b6      	beq.n	800097a <_malloc_r+0x22>
 8000a0c:	1b9b      	subs	r3, r3, r6
 8000a0e:	50a3      	str	r3, [r4, r2]
 8000a10:	e7b3      	b.n	800097a <_malloc_r+0x22>
 8000a12:	6862      	ldr	r2, [r4, #4]
 8000a14:	42a3      	cmp	r3, r4
 8000a16:	bf0c      	ite	eq
 8000a18:	6032      	streq	r2, [r6, #0]
 8000a1a:	605a      	strne	r2, [r3, #4]
 8000a1c:	e7ec      	b.n	80009f8 <_malloc_r+0xa0>
 8000a1e:	4623      	mov	r3, r4
 8000a20:	6864      	ldr	r4, [r4, #4]
 8000a22:	e7b2      	b.n	800098a <_malloc_r+0x32>
 8000a24:	4634      	mov	r4, r6
 8000a26:	6876      	ldr	r6, [r6, #4]
 8000a28:	e7b9      	b.n	800099e <_malloc_r+0x46>
 8000a2a:	230c      	movs	r3, #12
 8000a2c:	603b      	str	r3, [r7, #0]
 8000a2e:	4638      	mov	r0, r7
 8000a30:	f000 fda8 	bl	8001584 <__malloc_unlock>
 8000a34:	e7a1      	b.n	800097a <_malloc_r+0x22>
 8000a36:	6025      	str	r5, [r4, #0]
 8000a38:	e7de      	b.n	80009f8 <_malloc_r+0xa0>
 8000a3a:	bf00      	nop
 8000a3c:	20000088 	.word	0x20000088

08000a40 <__sfputc_r>:
 8000a40:	6893      	ldr	r3, [r2, #8]
 8000a42:	3b01      	subs	r3, #1
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	b410      	push	{r4}
 8000a48:	6093      	str	r3, [r2, #8]
 8000a4a:	da08      	bge.n	8000a5e <__sfputc_r+0x1e>
 8000a4c:	6994      	ldr	r4, [r2, #24]
 8000a4e:	42a3      	cmp	r3, r4
 8000a50:	db01      	blt.n	8000a56 <__sfputc_r+0x16>
 8000a52:	290a      	cmp	r1, #10
 8000a54:	d103      	bne.n	8000a5e <__sfputc_r+0x1e>
 8000a56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a5a:	f000 bb5f 	b.w	800111c <__swbuf_r>
 8000a5e:	6813      	ldr	r3, [r2, #0]
 8000a60:	1c58      	adds	r0, r3, #1
 8000a62:	6010      	str	r0, [r2, #0]
 8000a64:	7019      	strb	r1, [r3, #0]
 8000a66:	4608      	mov	r0, r1
 8000a68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a6c:	4770      	bx	lr

08000a6e <__sfputs_r>:
 8000a6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a70:	4606      	mov	r6, r0
 8000a72:	460f      	mov	r7, r1
 8000a74:	4614      	mov	r4, r2
 8000a76:	18d5      	adds	r5, r2, r3
 8000a78:	42ac      	cmp	r4, r5
 8000a7a:	d101      	bne.n	8000a80 <__sfputs_r+0x12>
 8000a7c:	2000      	movs	r0, #0
 8000a7e:	e007      	b.n	8000a90 <__sfputs_r+0x22>
 8000a80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a84:	463a      	mov	r2, r7
 8000a86:	4630      	mov	r0, r6
 8000a88:	f7ff ffda 	bl	8000a40 <__sfputc_r>
 8000a8c:	1c43      	adds	r3, r0, #1
 8000a8e:	d1f3      	bne.n	8000a78 <__sfputs_r+0xa>
 8000a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a94 <_vfiprintf_r>:
 8000a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a98:	460d      	mov	r5, r1
 8000a9a:	b09d      	sub	sp, #116	; 0x74
 8000a9c:	4614      	mov	r4, r2
 8000a9e:	4698      	mov	r8, r3
 8000aa0:	4606      	mov	r6, r0
 8000aa2:	b118      	cbz	r0, 8000aac <_vfiprintf_r+0x18>
 8000aa4:	6983      	ldr	r3, [r0, #24]
 8000aa6:	b90b      	cbnz	r3, 8000aac <_vfiprintf_r+0x18>
 8000aa8:	f7ff fe38 	bl	800071c <__sinit>
 8000aac:	4b89      	ldr	r3, [pc, #548]	; (8000cd4 <_vfiprintf_r+0x240>)
 8000aae:	429d      	cmp	r5, r3
 8000ab0:	d11b      	bne.n	8000aea <_vfiprintf_r+0x56>
 8000ab2:	6875      	ldr	r5, [r6, #4]
 8000ab4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ab6:	07d9      	lsls	r1, r3, #31
 8000ab8:	d405      	bmi.n	8000ac6 <_vfiprintf_r+0x32>
 8000aba:	89ab      	ldrh	r3, [r5, #12]
 8000abc:	059a      	lsls	r2, r3, #22
 8000abe:	d402      	bmi.n	8000ac6 <_vfiprintf_r+0x32>
 8000ac0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ac2:	f7ff ff26 	bl	8000912 <__retarget_lock_acquire_recursive>
 8000ac6:	89ab      	ldrh	r3, [r5, #12]
 8000ac8:	071b      	lsls	r3, r3, #28
 8000aca:	d501      	bpl.n	8000ad0 <_vfiprintf_r+0x3c>
 8000acc:	692b      	ldr	r3, [r5, #16]
 8000ace:	b9eb      	cbnz	r3, 8000b0c <_vfiprintf_r+0x78>
 8000ad0:	4629      	mov	r1, r5
 8000ad2:	4630      	mov	r0, r6
 8000ad4:	f000 fb86 	bl	80011e4 <__swsetup_r>
 8000ad8:	b1c0      	cbz	r0, 8000b0c <_vfiprintf_r+0x78>
 8000ada:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000adc:	07dc      	lsls	r4, r3, #31
 8000ade:	d50e      	bpl.n	8000afe <_vfiprintf_r+0x6a>
 8000ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae4:	b01d      	add	sp, #116	; 0x74
 8000ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aea:	4b7b      	ldr	r3, [pc, #492]	; (8000cd8 <_vfiprintf_r+0x244>)
 8000aec:	429d      	cmp	r5, r3
 8000aee:	d101      	bne.n	8000af4 <_vfiprintf_r+0x60>
 8000af0:	68b5      	ldr	r5, [r6, #8]
 8000af2:	e7df      	b.n	8000ab4 <_vfiprintf_r+0x20>
 8000af4:	4b79      	ldr	r3, [pc, #484]	; (8000cdc <_vfiprintf_r+0x248>)
 8000af6:	429d      	cmp	r5, r3
 8000af8:	bf08      	it	eq
 8000afa:	68f5      	ldreq	r5, [r6, #12]
 8000afc:	e7da      	b.n	8000ab4 <_vfiprintf_r+0x20>
 8000afe:	89ab      	ldrh	r3, [r5, #12]
 8000b00:	0598      	lsls	r0, r3, #22
 8000b02:	d4ed      	bmi.n	8000ae0 <_vfiprintf_r+0x4c>
 8000b04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b06:	f7ff ff05 	bl	8000914 <__retarget_lock_release_recursive>
 8000b0a:	e7e9      	b.n	8000ae0 <_vfiprintf_r+0x4c>
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	9309      	str	r3, [sp, #36]	; 0x24
 8000b10:	2320      	movs	r3, #32
 8000b12:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b16:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b1a:	2330      	movs	r3, #48	; 0x30
 8000b1c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ce0 <_vfiprintf_r+0x24c>
 8000b20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b24:	f04f 0901 	mov.w	r9, #1
 8000b28:	4623      	mov	r3, r4
 8000b2a:	469a      	mov	sl, r3
 8000b2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b30:	b10a      	cbz	r2, 8000b36 <_vfiprintf_r+0xa2>
 8000b32:	2a25      	cmp	r2, #37	; 0x25
 8000b34:	d1f9      	bne.n	8000b2a <_vfiprintf_r+0x96>
 8000b36:	ebba 0b04 	subs.w	fp, sl, r4
 8000b3a:	d00b      	beq.n	8000b54 <_vfiprintf_r+0xc0>
 8000b3c:	465b      	mov	r3, fp
 8000b3e:	4622      	mov	r2, r4
 8000b40:	4629      	mov	r1, r5
 8000b42:	4630      	mov	r0, r6
 8000b44:	f7ff ff93 	bl	8000a6e <__sfputs_r>
 8000b48:	3001      	adds	r0, #1
 8000b4a:	f000 80aa 	beq.w	8000ca2 <_vfiprintf_r+0x20e>
 8000b4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b50:	445a      	add	r2, fp
 8000b52:	9209      	str	r2, [sp, #36]	; 0x24
 8000b54:	f89a 3000 	ldrb.w	r3, [sl]
 8000b58:	2b00      	cmp	r3, #0
 8000b5a:	f000 80a2 	beq.w	8000ca2 <_vfiprintf_r+0x20e>
 8000b5e:	2300      	movs	r3, #0
 8000b60:	f04f 32ff 	mov.w	r2, #4294967295
 8000b64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b68:	f10a 0a01 	add.w	sl, sl, #1
 8000b6c:	9304      	str	r3, [sp, #16]
 8000b6e:	9307      	str	r3, [sp, #28]
 8000b70:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b74:	931a      	str	r3, [sp, #104]	; 0x68
 8000b76:	4654      	mov	r4, sl
 8000b78:	2205      	movs	r2, #5
 8000b7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b7e:	4858      	ldr	r0, [pc, #352]	; (8000ce0 <_vfiprintf_r+0x24c>)
 8000b80:	f7ff fb36 	bl	80001f0 <memchr>
 8000b84:	9a04      	ldr	r2, [sp, #16]
 8000b86:	b9d8      	cbnz	r0, 8000bc0 <_vfiprintf_r+0x12c>
 8000b88:	06d1      	lsls	r1, r2, #27
 8000b8a:	bf44      	itt	mi
 8000b8c:	2320      	movmi	r3, #32
 8000b8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b92:	0713      	lsls	r3, r2, #28
 8000b94:	bf44      	itt	mi
 8000b96:	232b      	movmi	r3, #43	; 0x2b
 8000b98:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000ba0:	2b2a      	cmp	r3, #42	; 0x2a
 8000ba2:	d015      	beq.n	8000bd0 <_vfiprintf_r+0x13c>
 8000ba4:	9a07      	ldr	r2, [sp, #28]
 8000ba6:	4654      	mov	r4, sl
 8000ba8:	2000      	movs	r0, #0
 8000baa:	f04f 0c0a 	mov.w	ip, #10
 8000bae:	4621      	mov	r1, r4
 8000bb0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bb4:	3b30      	subs	r3, #48	; 0x30
 8000bb6:	2b09      	cmp	r3, #9
 8000bb8:	d94e      	bls.n	8000c58 <_vfiprintf_r+0x1c4>
 8000bba:	b1b0      	cbz	r0, 8000bea <_vfiprintf_r+0x156>
 8000bbc:	9207      	str	r2, [sp, #28]
 8000bbe:	e014      	b.n	8000bea <_vfiprintf_r+0x156>
 8000bc0:	eba0 0308 	sub.w	r3, r0, r8
 8000bc4:	fa09 f303 	lsl.w	r3, r9, r3
 8000bc8:	4313      	orrs	r3, r2
 8000bca:	9304      	str	r3, [sp, #16]
 8000bcc:	46a2      	mov	sl, r4
 8000bce:	e7d2      	b.n	8000b76 <_vfiprintf_r+0xe2>
 8000bd0:	9b03      	ldr	r3, [sp, #12]
 8000bd2:	1d19      	adds	r1, r3, #4
 8000bd4:	681b      	ldr	r3, [r3, #0]
 8000bd6:	9103      	str	r1, [sp, #12]
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	bfbb      	ittet	lt
 8000bdc:	425b      	neglt	r3, r3
 8000bde:	f042 0202 	orrlt.w	r2, r2, #2
 8000be2:	9307      	strge	r3, [sp, #28]
 8000be4:	9307      	strlt	r3, [sp, #28]
 8000be6:	bfb8      	it	lt
 8000be8:	9204      	strlt	r2, [sp, #16]
 8000bea:	7823      	ldrb	r3, [r4, #0]
 8000bec:	2b2e      	cmp	r3, #46	; 0x2e
 8000bee:	d10c      	bne.n	8000c0a <_vfiprintf_r+0x176>
 8000bf0:	7863      	ldrb	r3, [r4, #1]
 8000bf2:	2b2a      	cmp	r3, #42	; 0x2a
 8000bf4:	d135      	bne.n	8000c62 <_vfiprintf_r+0x1ce>
 8000bf6:	9b03      	ldr	r3, [sp, #12]
 8000bf8:	1d1a      	adds	r2, r3, #4
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	9203      	str	r2, [sp, #12]
 8000bfe:	2b00      	cmp	r3, #0
 8000c00:	bfb8      	it	lt
 8000c02:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c06:	3402      	adds	r4, #2
 8000c08:	9305      	str	r3, [sp, #20]
 8000c0a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000cf0 <_vfiprintf_r+0x25c>
 8000c0e:	7821      	ldrb	r1, [r4, #0]
 8000c10:	2203      	movs	r2, #3
 8000c12:	4650      	mov	r0, sl
 8000c14:	f7ff faec 	bl	80001f0 <memchr>
 8000c18:	b140      	cbz	r0, 8000c2c <_vfiprintf_r+0x198>
 8000c1a:	2340      	movs	r3, #64	; 0x40
 8000c1c:	eba0 000a 	sub.w	r0, r0, sl
 8000c20:	fa03 f000 	lsl.w	r0, r3, r0
 8000c24:	9b04      	ldr	r3, [sp, #16]
 8000c26:	4303      	orrs	r3, r0
 8000c28:	3401      	adds	r4, #1
 8000c2a:	9304      	str	r3, [sp, #16]
 8000c2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c30:	482c      	ldr	r0, [pc, #176]	; (8000ce4 <_vfiprintf_r+0x250>)
 8000c32:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c36:	2206      	movs	r2, #6
 8000c38:	f7ff fada 	bl	80001f0 <memchr>
 8000c3c:	2800      	cmp	r0, #0
 8000c3e:	d03f      	beq.n	8000cc0 <_vfiprintf_r+0x22c>
 8000c40:	4b29      	ldr	r3, [pc, #164]	; (8000ce8 <_vfiprintf_r+0x254>)
 8000c42:	bb1b      	cbnz	r3, 8000c8c <_vfiprintf_r+0x1f8>
 8000c44:	9b03      	ldr	r3, [sp, #12]
 8000c46:	3307      	adds	r3, #7
 8000c48:	f023 0307 	bic.w	r3, r3, #7
 8000c4c:	3308      	adds	r3, #8
 8000c4e:	9303      	str	r3, [sp, #12]
 8000c50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c52:	443b      	add	r3, r7
 8000c54:	9309      	str	r3, [sp, #36]	; 0x24
 8000c56:	e767      	b.n	8000b28 <_vfiprintf_r+0x94>
 8000c58:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c5c:	460c      	mov	r4, r1
 8000c5e:	2001      	movs	r0, #1
 8000c60:	e7a5      	b.n	8000bae <_vfiprintf_r+0x11a>
 8000c62:	2300      	movs	r3, #0
 8000c64:	3401      	adds	r4, #1
 8000c66:	9305      	str	r3, [sp, #20]
 8000c68:	4619      	mov	r1, r3
 8000c6a:	f04f 0c0a 	mov.w	ip, #10
 8000c6e:	4620      	mov	r0, r4
 8000c70:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c74:	3a30      	subs	r2, #48	; 0x30
 8000c76:	2a09      	cmp	r2, #9
 8000c78:	d903      	bls.n	8000c82 <_vfiprintf_r+0x1ee>
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d0c5      	beq.n	8000c0a <_vfiprintf_r+0x176>
 8000c7e:	9105      	str	r1, [sp, #20]
 8000c80:	e7c3      	b.n	8000c0a <_vfiprintf_r+0x176>
 8000c82:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c86:	4604      	mov	r4, r0
 8000c88:	2301      	movs	r3, #1
 8000c8a:	e7f0      	b.n	8000c6e <_vfiprintf_r+0x1da>
 8000c8c:	ab03      	add	r3, sp, #12
 8000c8e:	9300      	str	r3, [sp, #0]
 8000c90:	462a      	mov	r2, r5
 8000c92:	4b16      	ldr	r3, [pc, #88]	; (8000cec <_vfiprintf_r+0x258>)
 8000c94:	a904      	add	r1, sp, #16
 8000c96:	4630      	mov	r0, r6
 8000c98:	f3af 8000 	nop.w
 8000c9c:	4607      	mov	r7, r0
 8000c9e:	1c78      	adds	r0, r7, #1
 8000ca0:	d1d6      	bne.n	8000c50 <_vfiprintf_r+0x1bc>
 8000ca2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ca4:	07d9      	lsls	r1, r3, #31
 8000ca6:	d405      	bmi.n	8000cb4 <_vfiprintf_r+0x220>
 8000ca8:	89ab      	ldrh	r3, [r5, #12]
 8000caa:	059a      	lsls	r2, r3, #22
 8000cac:	d402      	bmi.n	8000cb4 <_vfiprintf_r+0x220>
 8000cae:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cb0:	f7ff fe30 	bl	8000914 <__retarget_lock_release_recursive>
 8000cb4:	89ab      	ldrh	r3, [r5, #12]
 8000cb6:	065b      	lsls	r3, r3, #25
 8000cb8:	f53f af12 	bmi.w	8000ae0 <_vfiprintf_r+0x4c>
 8000cbc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000cbe:	e711      	b.n	8000ae4 <_vfiprintf_r+0x50>
 8000cc0:	ab03      	add	r3, sp, #12
 8000cc2:	9300      	str	r3, [sp, #0]
 8000cc4:	462a      	mov	r2, r5
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_vfiprintf_r+0x258>)
 8000cc8:	a904      	add	r1, sp, #16
 8000cca:	4630      	mov	r0, r6
 8000ccc:	f000 f880 	bl	8000dd0 <_printf_i>
 8000cd0:	e7e4      	b.n	8000c9c <_vfiprintf_r+0x208>
 8000cd2:	bf00      	nop
 8000cd4:	08001930 	.word	0x08001930
 8000cd8:	08001950 	.word	0x08001950
 8000cdc:	08001910 	.word	0x08001910
 8000ce0:	08001970 	.word	0x08001970
 8000ce4:	0800197a 	.word	0x0800197a
 8000ce8:	00000000 	.word	0x00000000
 8000cec:	08000a6f 	.word	0x08000a6f
 8000cf0:	08001976 	.word	0x08001976

08000cf4 <_printf_common>:
 8000cf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cf8:	4616      	mov	r6, r2
 8000cfa:	4699      	mov	r9, r3
 8000cfc:	688a      	ldr	r2, [r1, #8]
 8000cfe:	690b      	ldr	r3, [r1, #16]
 8000d00:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d04:	4293      	cmp	r3, r2
 8000d06:	bfb8      	it	lt
 8000d08:	4613      	movlt	r3, r2
 8000d0a:	6033      	str	r3, [r6, #0]
 8000d0c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d10:	4607      	mov	r7, r0
 8000d12:	460c      	mov	r4, r1
 8000d14:	b10a      	cbz	r2, 8000d1a <_printf_common+0x26>
 8000d16:	3301      	adds	r3, #1
 8000d18:	6033      	str	r3, [r6, #0]
 8000d1a:	6823      	ldr	r3, [r4, #0]
 8000d1c:	0699      	lsls	r1, r3, #26
 8000d1e:	bf42      	ittt	mi
 8000d20:	6833      	ldrmi	r3, [r6, #0]
 8000d22:	3302      	addmi	r3, #2
 8000d24:	6033      	strmi	r3, [r6, #0]
 8000d26:	6825      	ldr	r5, [r4, #0]
 8000d28:	f015 0506 	ands.w	r5, r5, #6
 8000d2c:	d106      	bne.n	8000d3c <_printf_common+0x48>
 8000d2e:	f104 0a19 	add.w	sl, r4, #25
 8000d32:	68e3      	ldr	r3, [r4, #12]
 8000d34:	6832      	ldr	r2, [r6, #0]
 8000d36:	1a9b      	subs	r3, r3, r2
 8000d38:	42ab      	cmp	r3, r5
 8000d3a:	dc26      	bgt.n	8000d8a <_printf_common+0x96>
 8000d3c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d40:	1e13      	subs	r3, r2, #0
 8000d42:	6822      	ldr	r2, [r4, #0]
 8000d44:	bf18      	it	ne
 8000d46:	2301      	movne	r3, #1
 8000d48:	0692      	lsls	r2, r2, #26
 8000d4a:	d42b      	bmi.n	8000da4 <_printf_common+0xb0>
 8000d4c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d50:	4649      	mov	r1, r9
 8000d52:	4638      	mov	r0, r7
 8000d54:	47c0      	blx	r8
 8000d56:	3001      	adds	r0, #1
 8000d58:	d01e      	beq.n	8000d98 <_printf_common+0xa4>
 8000d5a:	6823      	ldr	r3, [r4, #0]
 8000d5c:	68e5      	ldr	r5, [r4, #12]
 8000d5e:	6832      	ldr	r2, [r6, #0]
 8000d60:	f003 0306 	and.w	r3, r3, #6
 8000d64:	2b04      	cmp	r3, #4
 8000d66:	bf08      	it	eq
 8000d68:	1aad      	subeq	r5, r5, r2
 8000d6a:	68a3      	ldr	r3, [r4, #8]
 8000d6c:	6922      	ldr	r2, [r4, #16]
 8000d6e:	bf0c      	ite	eq
 8000d70:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d74:	2500      	movne	r5, #0
 8000d76:	4293      	cmp	r3, r2
 8000d78:	bfc4      	itt	gt
 8000d7a:	1a9b      	subgt	r3, r3, r2
 8000d7c:	18ed      	addgt	r5, r5, r3
 8000d7e:	2600      	movs	r6, #0
 8000d80:	341a      	adds	r4, #26
 8000d82:	42b5      	cmp	r5, r6
 8000d84:	d11a      	bne.n	8000dbc <_printf_common+0xc8>
 8000d86:	2000      	movs	r0, #0
 8000d88:	e008      	b.n	8000d9c <_printf_common+0xa8>
 8000d8a:	2301      	movs	r3, #1
 8000d8c:	4652      	mov	r2, sl
 8000d8e:	4649      	mov	r1, r9
 8000d90:	4638      	mov	r0, r7
 8000d92:	47c0      	blx	r8
 8000d94:	3001      	adds	r0, #1
 8000d96:	d103      	bne.n	8000da0 <_printf_common+0xac>
 8000d98:	f04f 30ff 	mov.w	r0, #4294967295
 8000d9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da0:	3501      	adds	r5, #1
 8000da2:	e7c6      	b.n	8000d32 <_printf_common+0x3e>
 8000da4:	18e1      	adds	r1, r4, r3
 8000da6:	1c5a      	adds	r2, r3, #1
 8000da8:	2030      	movs	r0, #48	; 0x30
 8000daa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000dae:	4422      	add	r2, r4
 8000db0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000db4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000db8:	3302      	adds	r3, #2
 8000dba:	e7c7      	b.n	8000d4c <_printf_common+0x58>
 8000dbc:	2301      	movs	r3, #1
 8000dbe:	4622      	mov	r2, r4
 8000dc0:	4649      	mov	r1, r9
 8000dc2:	4638      	mov	r0, r7
 8000dc4:	47c0      	blx	r8
 8000dc6:	3001      	adds	r0, #1
 8000dc8:	d0e6      	beq.n	8000d98 <_printf_common+0xa4>
 8000dca:	3601      	adds	r6, #1
 8000dcc:	e7d9      	b.n	8000d82 <_printf_common+0x8e>
	...

08000dd0 <_printf_i>:
 8000dd0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000dd4:	7e0f      	ldrb	r7, [r1, #24]
 8000dd6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000dd8:	2f78      	cmp	r7, #120	; 0x78
 8000dda:	4691      	mov	r9, r2
 8000ddc:	4680      	mov	r8, r0
 8000dde:	460c      	mov	r4, r1
 8000de0:	469a      	mov	sl, r3
 8000de2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000de6:	d807      	bhi.n	8000df8 <_printf_i+0x28>
 8000de8:	2f62      	cmp	r7, #98	; 0x62
 8000dea:	d80a      	bhi.n	8000e02 <_printf_i+0x32>
 8000dec:	2f00      	cmp	r7, #0
 8000dee:	f000 80d8 	beq.w	8000fa2 <_printf_i+0x1d2>
 8000df2:	2f58      	cmp	r7, #88	; 0x58
 8000df4:	f000 80a3 	beq.w	8000f3e <_printf_i+0x16e>
 8000df8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dfc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e00:	e03a      	b.n	8000e78 <_printf_i+0xa8>
 8000e02:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e06:	2b15      	cmp	r3, #21
 8000e08:	d8f6      	bhi.n	8000df8 <_printf_i+0x28>
 8000e0a:	a101      	add	r1, pc, #4	; (adr r1, 8000e10 <_printf_i+0x40>)
 8000e0c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e10:	08000e69 	.word	0x08000e69
 8000e14:	08000e7d 	.word	0x08000e7d
 8000e18:	08000df9 	.word	0x08000df9
 8000e1c:	08000df9 	.word	0x08000df9
 8000e20:	08000df9 	.word	0x08000df9
 8000e24:	08000df9 	.word	0x08000df9
 8000e28:	08000e7d 	.word	0x08000e7d
 8000e2c:	08000df9 	.word	0x08000df9
 8000e30:	08000df9 	.word	0x08000df9
 8000e34:	08000df9 	.word	0x08000df9
 8000e38:	08000df9 	.word	0x08000df9
 8000e3c:	08000f89 	.word	0x08000f89
 8000e40:	08000ead 	.word	0x08000ead
 8000e44:	08000f6b 	.word	0x08000f6b
 8000e48:	08000df9 	.word	0x08000df9
 8000e4c:	08000df9 	.word	0x08000df9
 8000e50:	08000fab 	.word	0x08000fab
 8000e54:	08000df9 	.word	0x08000df9
 8000e58:	08000ead 	.word	0x08000ead
 8000e5c:	08000df9 	.word	0x08000df9
 8000e60:	08000df9 	.word	0x08000df9
 8000e64:	08000f73 	.word	0x08000f73
 8000e68:	682b      	ldr	r3, [r5, #0]
 8000e6a:	1d1a      	adds	r2, r3, #4
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	602a      	str	r2, [r5, #0]
 8000e70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e74:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e78:	2301      	movs	r3, #1
 8000e7a:	e0a3      	b.n	8000fc4 <_printf_i+0x1f4>
 8000e7c:	6820      	ldr	r0, [r4, #0]
 8000e7e:	6829      	ldr	r1, [r5, #0]
 8000e80:	0606      	lsls	r6, r0, #24
 8000e82:	f101 0304 	add.w	r3, r1, #4
 8000e86:	d50a      	bpl.n	8000e9e <_printf_i+0xce>
 8000e88:	680e      	ldr	r6, [r1, #0]
 8000e8a:	602b      	str	r3, [r5, #0]
 8000e8c:	2e00      	cmp	r6, #0
 8000e8e:	da03      	bge.n	8000e98 <_printf_i+0xc8>
 8000e90:	232d      	movs	r3, #45	; 0x2d
 8000e92:	4276      	negs	r6, r6
 8000e94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e98:	485e      	ldr	r0, [pc, #376]	; (8001014 <_printf_i+0x244>)
 8000e9a:	230a      	movs	r3, #10
 8000e9c:	e019      	b.n	8000ed2 <_printf_i+0x102>
 8000e9e:	680e      	ldr	r6, [r1, #0]
 8000ea0:	602b      	str	r3, [r5, #0]
 8000ea2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ea6:	bf18      	it	ne
 8000ea8:	b236      	sxthne	r6, r6
 8000eaa:	e7ef      	b.n	8000e8c <_printf_i+0xbc>
 8000eac:	682b      	ldr	r3, [r5, #0]
 8000eae:	6820      	ldr	r0, [r4, #0]
 8000eb0:	1d19      	adds	r1, r3, #4
 8000eb2:	6029      	str	r1, [r5, #0]
 8000eb4:	0601      	lsls	r1, r0, #24
 8000eb6:	d501      	bpl.n	8000ebc <_printf_i+0xec>
 8000eb8:	681e      	ldr	r6, [r3, #0]
 8000eba:	e002      	b.n	8000ec2 <_printf_i+0xf2>
 8000ebc:	0646      	lsls	r6, r0, #25
 8000ebe:	d5fb      	bpl.n	8000eb8 <_printf_i+0xe8>
 8000ec0:	881e      	ldrh	r6, [r3, #0]
 8000ec2:	4854      	ldr	r0, [pc, #336]	; (8001014 <_printf_i+0x244>)
 8000ec4:	2f6f      	cmp	r7, #111	; 0x6f
 8000ec6:	bf0c      	ite	eq
 8000ec8:	2308      	moveq	r3, #8
 8000eca:	230a      	movne	r3, #10
 8000ecc:	2100      	movs	r1, #0
 8000ece:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ed2:	6865      	ldr	r5, [r4, #4]
 8000ed4:	60a5      	str	r5, [r4, #8]
 8000ed6:	2d00      	cmp	r5, #0
 8000ed8:	bfa2      	ittt	ge
 8000eda:	6821      	ldrge	r1, [r4, #0]
 8000edc:	f021 0104 	bicge.w	r1, r1, #4
 8000ee0:	6021      	strge	r1, [r4, #0]
 8000ee2:	b90e      	cbnz	r6, 8000ee8 <_printf_i+0x118>
 8000ee4:	2d00      	cmp	r5, #0
 8000ee6:	d04d      	beq.n	8000f84 <_printf_i+0x1b4>
 8000ee8:	4615      	mov	r5, r2
 8000eea:	fbb6 f1f3 	udiv	r1, r6, r3
 8000eee:	fb03 6711 	mls	r7, r3, r1, r6
 8000ef2:	5dc7      	ldrb	r7, [r0, r7]
 8000ef4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ef8:	4637      	mov	r7, r6
 8000efa:	42bb      	cmp	r3, r7
 8000efc:	460e      	mov	r6, r1
 8000efe:	d9f4      	bls.n	8000eea <_printf_i+0x11a>
 8000f00:	2b08      	cmp	r3, #8
 8000f02:	d10b      	bne.n	8000f1c <_printf_i+0x14c>
 8000f04:	6823      	ldr	r3, [r4, #0]
 8000f06:	07de      	lsls	r6, r3, #31
 8000f08:	d508      	bpl.n	8000f1c <_printf_i+0x14c>
 8000f0a:	6923      	ldr	r3, [r4, #16]
 8000f0c:	6861      	ldr	r1, [r4, #4]
 8000f0e:	4299      	cmp	r1, r3
 8000f10:	bfde      	ittt	le
 8000f12:	2330      	movle	r3, #48	; 0x30
 8000f14:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f18:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f1c:	1b52      	subs	r2, r2, r5
 8000f1e:	6122      	str	r2, [r4, #16]
 8000f20:	f8cd a000 	str.w	sl, [sp]
 8000f24:	464b      	mov	r3, r9
 8000f26:	aa03      	add	r2, sp, #12
 8000f28:	4621      	mov	r1, r4
 8000f2a:	4640      	mov	r0, r8
 8000f2c:	f7ff fee2 	bl	8000cf4 <_printf_common>
 8000f30:	3001      	adds	r0, #1
 8000f32:	d14c      	bne.n	8000fce <_printf_i+0x1fe>
 8000f34:	f04f 30ff 	mov.w	r0, #4294967295
 8000f38:	b004      	add	sp, #16
 8000f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f3e:	4835      	ldr	r0, [pc, #212]	; (8001014 <_printf_i+0x244>)
 8000f40:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000f44:	6829      	ldr	r1, [r5, #0]
 8000f46:	6823      	ldr	r3, [r4, #0]
 8000f48:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f4c:	6029      	str	r1, [r5, #0]
 8000f4e:	061d      	lsls	r5, r3, #24
 8000f50:	d514      	bpl.n	8000f7c <_printf_i+0x1ac>
 8000f52:	07df      	lsls	r7, r3, #31
 8000f54:	bf44      	itt	mi
 8000f56:	f043 0320 	orrmi.w	r3, r3, #32
 8000f5a:	6023      	strmi	r3, [r4, #0]
 8000f5c:	b91e      	cbnz	r6, 8000f66 <_printf_i+0x196>
 8000f5e:	6823      	ldr	r3, [r4, #0]
 8000f60:	f023 0320 	bic.w	r3, r3, #32
 8000f64:	6023      	str	r3, [r4, #0]
 8000f66:	2310      	movs	r3, #16
 8000f68:	e7b0      	b.n	8000ecc <_printf_i+0xfc>
 8000f6a:	6823      	ldr	r3, [r4, #0]
 8000f6c:	f043 0320 	orr.w	r3, r3, #32
 8000f70:	6023      	str	r3, [r4, #0]
 8000f72:	2378      	movs	r3, #120	; 0x78
 8000f74:	4828      	ldr	r0, [pc, #160]	; (8001018 <_printf_i+0x248>)
 8000f76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000f7a:	e7e3      	b.n	8000f44 <_printf_i+0x174>
 8000f7c:	0659      	lsls	r1, r3, #25
 8000f7e:	bf48      	it	mi
 8000f80:	b2b6      	uxthmi	r6, r6
 8000f82:	e7e6      	b.n	8000f52 <_printf_i+0x182>
 8000f84:	4615      	mov	r5, r2
 8000f86:	e7bb      	b.n	8000f00 <_printf_i+0x130>
 8000f88:	682b      	ldr	r3, [r5, #0]
 8000f8a:	6826      	ldr	r6, [r4, #0]
 8000f8c:	6961      	ldr	r1, [r4, #20]
 8000f8e:	1d18      	adds	r0, r3, #4
 8000f90:	6028      	str	r0, [r5, #0]
 8000f92:	0635      	lsls	r5, r6, #24
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	d501      	bpl.n	8000f9c <_printf_i+0x1cc>
 8000f98:	6019      	str	r1, [r3, #0]
 8000f9a:	e002      	b.n	8000fa2 <_printf_i+0x1d2>
 8000f9c:	0670      	lsls	r0, r6, #25
 8000f9e:	d5fb      	bpl.n	8000f98 <_printf_i+0x1c8>
 8000fa0:	8019      	strh	r1, [r3, #0]
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	6123      	str	r3, [r4, #16]
 8000fa6:	4615      	mov	r5, r2
 8000fa8:	e7ba      	b.n	8000f20 <_printf_i+0x150>
 8000faa:	682b      	ldr	r3, [r5, #0]
 8000fac:	1d1a      	adds	r2, r3, #4
 8000fae:	602a      	str	r2, [r5, #0]
 8000fb0:	681d      	ldr	r5, [r3, #0]
 8000fb2:	6862      	ldr	r2, [r4, #4]
 8000fb4:	2100      	movs	r1, #0
 8000fb6:	4628      	mov	r0, r5
 8000fb8:	f7ff f91a 	bl	80001f0 <memchr>
 8000fbc:	b108      	cbz	r0, 8000fc2 <_printf_i+0x1f2>
 8000fbe:	1b40      	subs	r0, r0, r5
 8000fc0:	6060      	str	r0, [r4, #4]
 8000fc2:	6863      	ldr	r3, [r4, #4]
 8000fc4:	6123      	str	r3, [r4, #16]
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fcc:	e7a8      	b.n	8000f20 <_printf_i+0x150>
 8000fce:	6923      	ldr	r3, [r4, #16]
 8000fd0:	462a      	mov	r2, r5
 8000fd2:	4649      	mov	r1, r9
 8000fd4:	4640      	mov	r0, r8
 8000fd6:	47d0      	blx	sl
 8000fd8:	3001      	adds	r0, #1
 8000fda:	d0ab      	beq.n	8000f34 <_printf_i+0x164>
 8000fdc:	6823      	ldr	r3, [r4, #0]
 8000fde:	079b      	lsls	r3, r3, #30
 8000fe0:	d413      	bmi.n	800100a <_printf_i+0x23a>
 8000fe2:	68e0      	ldr	r0, [r4, #12]
 8000fe4:	9b03      	ldr	r3, [sp, #12]
 8000fe6:	4298      	cmp	r0, r3
 8000fe8:	bfb8      	it	lt
 8000fea:	4618      	movlt	r0, r3
 8000fec:	e7a4      	b.n	8000f38 <_printf_i+0x168>
 8000fee:	2301      	movs	r3, #1
 8000ff0:	4632      	mov	r2, r6
 8000ff2:	4649      	mov	r1, r9
 8000ff4:	4640      	mov	r0, r8
 8000ff6:	47d0      	blx	sl
 8000ff8:	3001      	adds	r0, #1
 8000ffa:	d09b      	beq.n	8000f34 <_printf_i+0x164>
 8000ffc:	3501      	adds	r5, #1
 8000ffe:	68e3      	ldr	r3, [r4, #12]
 8001000:	9903      	ldr	r1, [sp, #12]
 8001002:	1a5b      	subs	r3, r3, r1
 8001004:	42ab      	cmp	r3, r5
 8001006:	dcf2      	bgt.n	8000fee <_printf_i+0x21e>
 8001008:	e7eb      	b.n	8000fe2 <_printf_i+0x212>
 800100a:	2500      	movs	r5, #0
 800100c:	f104 0619 	add.w	r6, r4, #25
 8001010:	e7f5      	b.n	8000ffe <_printf_i+0x22e>
 8001012:	bf00      	nop
 8001014:	08001981 	.word	0x08001981
 8001018:	08001992 	.word	0x08001992

0800101c <__srget_r>:
 800101c:	b538      	push	{r3, r4, r5, lr}
 800101e:	460c      	mov	r4, r1
 8001020:	4605      	mov	r5, r0
 8001022:	b118      	cbz	r0, 800102c <__srget_r+0x10>
 8001024:	6983      	ldr	r3, [r0, #24]
 8001026:	b90b      	cbnz	r3, 800102c <__srget_r+0x10>
 8001028:	f7ff fb78 	bl	800071c <__sinit>
 800102c:	4b0e      	ldr	r3, [pc, #56]	; (8001068 <__srget_r+0x4c>)
 800102e:	429c      	cmp	r4, r3
 8001030:	d10d      	bne.n	800104e <__srget_r+0x32>
 8001032:	686c      	ldr	r4, [r5, #4]
 8001034:	4621      	mov	r1, r4
 8001036:	4628      	mov	r0, r5
 8001038:	f000 fb12 	bl	8001660 <__srefill_r>
 800103c:	b988      	cbnz	r0, 8001062 <__srget_r+0x46>
 800103e:	6863      	ldr	r3, [r4, #4]
 8001040:	3b01      	subs	r3, #1
 8001042:	6063      	str	r3, [r4, #4]
 8001044:	6823      	ldr	r3, [r4, #0]
 8001046:	1c5a      	adds	r2, r3, #1
 8001048:	6022      	str	r2, [r4, #0]
 800104a:	7818      	ldrb	r0, [r3, #0]
 800104c:	bd38      	pop	{r3, r4, r5, pc}
 800104e:	4b07      	ldr	r3, [pc, #28]	; (800106c <__srget_r+0x50>)
 8001050:	429c      	cmp	r4, r3
 8001052:	d101      	bne.n	8001058 <__srget_r+0x3c>
 8001054:	68ac      	ldr	r4, [r5, #8]
 8001056:	e7ed      	b.n	8001034 <__srget_r+0x18>
 8001058:	4b05      	ldr	r3, [pc, #20]	; (8001070 <__srget_r+0x54>)
 800105a:	429c      	cmp	r4, r3
 800105c:	bf08      	it	eq
 800105e:	68ec      	ldreq	r4, [r5, #12]
 8001060:	e7e8      	b.n	8001034 <__srget_r+0x18>
 8001062:	f04f 30ff 	mov.w	r0, #4294967295
 8001066:	e7f1      	b.n	800104c <__srget_r+0x30>
 8001068:	08001930 	.word	0x08001930
 800106c:	08001950 	.word	0x08001950
 8001070:	08001910 	.word	0x08001910

08001074 <_sbrk_r>:
 8001074:	b538      	push	{r3, r4, r5, lr}
 8001076:	4d06      	ldr	r5, [pc, #24]	; (8001090 <_sbrk_r+0x1c>)
 8001078:	2300      	movs	r3, #0
 800107a:	4604      	mov	r4, r0
 800107c:	4608      	mov	r0, r1
 800107e:	602b      	str	r3, [r5, #0]
 8001080:	f7ff fa38 	bl	80004f4 <_sbrk>
 8001084:	1c43      	adds	r3, r0, #1
 8001086:	d102      	bne.n	800108e <_sbrk_r+0x1a>
 8001088:	682b      	ldr	r3, [r5, #0]
 800108a:	b103      	cbz	r3, 800108e <_sbrk_r+0x1a>
 800108c:	6023      	str	r3, [r4, #0]
 800108e:	bd38      	pop	{r3, r4, r5, pc}
 8001090:	20000090 	.word	0x20000090

08001094 <__sread>:
 8001094:	b510      	push	{r4, lr}
 8001096:	460c      	mov	r4, r1
 8001098:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800109c:	f000 fac4 	bl	8001628 <_read_r>
 80010a0:	2800      	cmp	r0, #0
 80010a2:	bfab      	itete	ge
 80010a4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80010a6:	89a3      	ldrhlt	r3, [r4, #12]
 80010a8:	181b      	addge	r3, r3, r0
 80010aa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80010ae:	bfac      	ite	ge
 80010b0:	6563      	strge	r3, [r4, #84]	; 0x54
 80010b2:	81a3      	strhlt	r3, [r4, #12]
 80010b4:	bd10      	pop	{r4, pc}

080010b6 <__swrite>:
 80010b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010ba:	461f      	mov	r7, r3
 80010bc:	898b      	ldrh	r3, [r1, #12]
 80010be:	05db      	lsls	r3, r3, #23
 80010c0:	4605      	mov	r5, r0
 80010c2:	460c      	mov	r4, r1
 80010c4:	4616      	mov	r6, r2
 80010c6:	d505      	bpl.n	80010d4 <__swrite+0x1e>
 80010c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010cc:	2302      	movs	r3, #2
 80010ce:	2200      	movs	r2, #0
 80010d0:	f000 f9da 	bl	8001488 <_lseek_r>
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80010da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80010de:	81a3      	strh	r3, [r4, #12]
 80010e0:	4632      	mov	r2, r6
 80010e2:	463b      	mov	r3, r7
 80010e4:	4628      	mov	r0, r5
 80010e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010ea:	f000 b869 	b.w	80011c0 <_write_r>

080010ee <__sseek>:
 80010ee:	b510      	push	{r4, lr}
 80010f0:	460c      	mov	r4, r1
 80010f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010f6:	f000 f9c7 	bl	8001488 <_lseek_r>
 80010fa:	1c43      	adds	r3, r0, #1
 80010fc:	89a3      	ldrh	r3, [r4, #12]
 80010fe:	bf15      	itete	ne
 8001100:	6560      	strne	r0, [r4, #84]	; 0x54
 8001102:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001106:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800110a:	81a3      	strheq	r3, [r4, #12]
 800110c:	bf18      	it	ne
 800110e:	81a3      	strhne	r3, [r4, #12]
 8001110:	bd10      	pop	{r4, pc}

08001112 <__sclose>:
 8001112:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001116:	f000 b8d3 	b.w	80012c0 <_close_r>
	...

0800111c <__swbuf_r>:
 800111c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800111e:	460e      	mov	r6, r1
 8001120:	4614      	mov	r4, r2
 8001122:	4605      	mov	r5, r0
 8001124:	b118      	cbz	r0, 800112e <__swbuf_r+0x12>
 8001126:	6983      	ldr	r3, [r0, #24]
 8001128:	b90b      	cbnz	r3, 800112e <__swbuf_r+0x12>
 800112a:	f7ff faf7 	bl	800071c <__sinit>
 800112e:	4b21      	ldr	r3, [pc, #132]	; (80011b4 <__swbuf_r+0x98>)
 8001130:	429c      	cmp	r4, r3
 8001132:	d12b      	bne.n	800118c <__swbuf_r+0x70>
 8001134:	686c      	ldr	r4, [r5, #4]
 8001136:	69a3      	ldr	r3, [r4, #24]
 8001138:	60a3      	str	r3, [r4, #8]
 800113a:	89a3      	ldrh	r3, [r4, #12]
 800113c:	071a      	lsls	r2, r3, #28
 800113e:	d52f      	bpl.n	80011a0 <__swbuf_r+0x84>
 8001140:	6923      	ldr	r3, [r4, #16]
 8001142:	b36b      	cbz	r3, 80011a0 <__swbuf_r+0x84>
 8001144:	6923      	ldr	r3, [r4, #16]
 8001146:	6820      	ldr	r0, [r4, #0]
 8001148:	1ac0      	subs	r0, r0, r3
 800114a:	6963      	ldr	r3, [r4, #20]
 800114c:	b2f6      	uxtb	r6, r6
 800114e:	4283      	cmp	r3, r0
 8001150:	4637      	mov	r7, r6
 8001152:	dc04      	bgt.n	800115e <__swbuf_r+0x42>
 8001154:	4621      	mov	r1, r4
 8001156:	4628      	mov	r0, r5
 8001158:	f000 f948 	bl	80013ec <_fflush_r>
 800115c:	bb30      	cbnz	r0, 80011ac <__swbuf_r+0x90>
 800115e:	68a3      	ldr	r3, [r4, #8]
 8001160:	3b01      	subs	r3, #1
 8001162:	60a3      	str	r3, [r4, #8]
 8001164:	6823      	ldr	r3, [r4, #0]
 8001166:	1c5a      	adds	r2, r3, #1
 8001168:	6022      	str	r2, [r4, #0]
 800116a:	701e      	strb	r6, [r3, #0]
 800116c:	6963      	ldr	r3, [r4, #20]
 800116e:	3001      	adds	r0, #1
 8001170:	4283      	cmp	r3, r0
 8001172:	d004      	beq.n	800117e <__swbuf_r+0x62>
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	07db      	lsls	r3, r3, #31
 8001178:	d506      	bpl.n	8001188 <__swbuf_r+0x6c>
 800117a:	2e0a      	cmp	r6, #10
 800117c:	d104      	bne.n	8001188 <__swbuf_r+0x6c>
 800117e:	4621      	mov	r1, r4
 8001180:	4628      	mov	r0, r5
 8001182:	f000 f933 	bl	80013ec <_fflush_r>
 8001186:	b988      	cbnz	r0, 80011ac <__swbuf_r+0x90>
 8001188:	4638      	mov	r0, r7
 800118a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800118c:	4b0a      	ldr	r3, [pc, #40]	; (80011b8 <__swbuf_r+0x9c>)
 800118e:	429c      	cmp	r4, r3
 8001190:	d101      	bne.n	8001196 <__swbuf_r+0x7a>
 8001192:	68ac      	ldr	r4, [r5, #8]
 8001194:	e7cf      	b.n	8001136 <__swbuf_r+0x1a>
 8001196:	4b09      	ldr	r3, [pc, #36]	; (80011bc <__swbuf_r+0xa0>)
 8001198:	429c      	cmp	r4, r3
 800119a:	bf08      	it	eq
 800119c:	68ec      	ldreq	r4, [r5, #12]
 800119e:	e7ca      	b.n	8001136 <__swbuf_r+0x1a>
 80011a0:	4621      	mov	r1, r4
 80011a2:	4628      	mov	r0, r5
 80011a4:	f000 f81e 	bl	80011e4 <__swsetup_r>
 80011a8:	2800      	cmp	r0, #0
 80011aa:	d0cb      	beq.n	8001144 <__swbuf_r+0x28>
 80011ac:	f04f 37ff 	mov.w	r7, #4294967295
 80011b0:	e7ea      	b.n	8001188 <__swbuf_r+0x6c>
 80011b2:	bf00      	nop
 80011b4:	08001930 	.word	0x08001930
 80011b8:	08001950 	.word	0x08001950
 80011bc:	08001910 	.word	0x08001910

080011c0 <_write_r>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	4d07      	ldr	r5, [pc, #28]	; (80011e0 <_write_r+0x20>)
 80011c4:	4604      	mov	r4, r0
 80011c6:	4608      	mov	r0, r1
 80011c8:	4611      	mov	r1, r2
 80011ca:	2200      	movs	r2, #0
 80011cc:	602a      	str	r2, [r5, #0]
 80011ce:	461a      	mov	r2, r3
 80011d0:	f7ff f93f 	bl	8000452 <_write>
 80011d4:	1c43      	adds	r3, r0, #1
 80011d6:	d102      	bne.n	80011de <_write_r+0x1e>
 80011d8:	682b      	ldr	r3, [r5, #0]
 80011da:	b103      	cbz	r3, 80011de <_write_r+0x1e>
 80011dc:	6023      	str	r3, [r4, #0]
 80011de:	bd38      	pop	{r3, r4, r5, pc}
 80011e0:	20000090 	.word	0x20000090

080011e4 <__swsetup_r>:
 80011e4:	4b32      	ldr	r3, [pc, #200]	; (80012b0 <__swsetup_r+0xcc>)
 80011e6:	b570      	push	{r4, r5, r6, lr}
 80011e8:	681d      	ldr	r5, [r3, #0]
 80011ea:	4606      	mov	r6, r0
 80011ec:	460c      	mov	r4, r1
 80011ee:	b125      	cbz	r5, 80011fa <__swsetup_r+0x16>
 80011f0:	69ab      	ldr	r3, [r5, #24]
 80011f2:	b913      	cbnz	r3, 80011fa <__swsetup_r+0x16>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f7ff fa91 	bl	800071c <__sinit>
 80011fa:	4b2e      	ldr	r3, [pc, #184]	; (80012b4 <__swsetup_r+0xd0>)
 80011fc:	429c      	cmp	r4, r3
 80011fe:	d10f      	bne.n	8001220 <__swsetup_r+0x3c>
 8001200:	686c      	ldr	r4, [r5, #4]
 8001202:	89a3      	ldrh	r3, [r4, #12]
 8001204:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001208:	0719      	lsls	r1, r3, #28
 800120a:	d42c      	bmi.n	8001266 <__swsetup_r+0x82>
 800120c:	06dd      	lsls	r5, r3, #27
 800120e:	d411      	bmi.n	8001234 <__swsetup_r+0x50>
 8001210:	2309      	movs	r3, #9
 8001212:	6033      	str	r3, [r6, #0]
 8001214:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001218:	81a3      	strh	r3, [r4, #12]
 800121a:	f04f 30ff 	mov.w	r0, #4294967295
 800121e:	e03e      	b.n	800129e <__swsetup_r+0xba>
 8001220:	4b25      	ldr	r3, [pc, #148]	; (80012b8 <__swsetup_r+0xd4>)
 8001222:	429c      	cmp	r4, r3
 8001224:	d101      	bne.n	800122a <__swsetup_r+0x46>
 8001226:	68ac      	ldr	r4, [r5, #8]
 8001228:	e7eb      	b.n	8001202 <__swsetup_r+0x1e>
 800122a:	4b24      	ldr	r3, [pc, #144]	; (80012bc <__swsetup_r+0xd8>)
 800122c:	429c      	cmp	r4, r3
 800122e:	bf08      	it	eq
 8001230:	68ec      	ldreq	r4, [r5, #12]
 8001232:	e7e6      	b.n	8001202 <__swsetup_r+0x1e>
 8001234:	0758      	lsls	r0, r3, #29
 8001236:	d512      	bpl.n	800125e <__swsetup_r+0x7a>
 8001238:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800123a:	b141      	cbz	r1, 800124e <__swsetup_r+0x6a>
 800123c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001240:	4299      	cmp	r1, r3
 8001242:	d002      	beq.n	800124a <__swsetup_r+0x66>
 8001244:	4630      	mov	r0, r6
 8001246:	f000 f9a3 	bl	8001590 <_free_r>
 800124a:	2300      	movs	r3, #0
 800124c:	6363      	str	r3, [r4, #52]	; 0x34
 800124e:	89a3      	ldrh	r3, [r4, #12]
 8001250:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001254:	81a3      	strh	r3, [r4, #12]
 8001256:	2300      	movs	r3, #0
 8001258:	6063      	str	r3, [r4, #4]
 800125a:	6923      	ldr	r3, [r4, #16]
 800125c:	6023      	str	r3, [r4, #0]
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	f043 0308 	orr.w	r3, r3, #8
 8001264:	81a3      	strh	r3, [r4, #12]
 8001266:	6923      	ldr	r3, [r4, #16]
 8001268:	b94b      	cbnz	r3, 800127e <__swsetup_r+0x9a>
 800126a:	89a3      	ldrh	r3, [r4, #12]
 800126c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001270:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001274:	d003      	beq.n	800127e <__swsetup_r+0x9a>
 8001276:	4621      	mov	r1, r4
 8001278:	4630      	mov	r0, r6
 800127a:	f000 f93d 	bl	80014f8 <__smakebuf_r>
 800127e:	89a0      	ldrh	r0, [r4, #12]
 8001280:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001284:	f010 0301 	ands.w	r3, r0, #1
 8001288:	d00a      	beq.n	80012a0 <__swsetup_r+0xbc>
 800128a:	2300      	movs	r3, #0
 800128c:	60a3      	str	r3, [r4, #8]
 800128e:	6963      	ldr	r3, [r4, #20]
 8001290:	425b      	negs	r3, r3
 8001292:	61a3      	str	r3, [r4, #24]
 8001294:	6923      	ldr	r3, [r4, #16]
 8001296:	b943      	cbnz	r3, 80012aa <__swsetup_r+0xc6>
 8001298:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800129c:	d1ba      	bne.n	8001214 <__swsetup_r+0x30>
 800129e:	bd70      	pop	{r4, r5, r6, pc}
 80012a0:	0781      	lsls	r1, r0, #30
 80012a2:	bf58      	it	pl
 80012a4:	6963      	ldrpl	r3, [r4, #20]
 80012a6:	60a3      	str	r3, [r4, #8]
 80012a8:	e7f4      	b.n	8001294 <__swsetup_r+0xb0>
 80012aa:	2000      	movs	r0, #0
 80012ac:	e7f7      	b.n	800129e <__swsetup_r+0xba>
 80012ae:	bf00      	nop
 80012b0:	20000000 	.word	0x20000000
 80012b4:	08001930 	.word	0x08001930
 80012b8:	08001950 	.word	0x08001950
 80012bc:	08001910 	.word	0x08001910

080012c0 <_close_r>:
 80012c0:	b538      	push	{r3, r4, r5, lr}
 80012c2:	4d06      	ldr	r5, [pc, #24]	; (80012dc <_close_r+0x1c>)
 80012c4:	2300      	movs	r3, #0
 80012c6:	4604      	mov	r4, r0
 80012c8:	4608      	mov	r0, r1
 80012ca:	602b      	str	r3, [r5, #0]
 80012cc:	f7ff f8dd 	bl	800048a <_close>
 80012d0:	1c43      	adds	r3, r0, #1
 80012d2:	d102      	bne.n	80012da <_close_r+0x1a>
 80012d4:	682b      	ldr	r3, [r5, #0]
 80012d6:	b103      	cbz	r3, 80012da <_close_r+0x1a>
 80012d8:	6023      	str	r3, [r4, #0]
 80012da:	bd38      	pop	{r3, r4, r5, pc}
 80012dc:	20000090 	.word	0x20000090

080012e0 <__sflush_r>:
 80012e0:	898a      	ldrh	r2, [r1, #12]
 80012e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012e6:	4605      	mov	r5, r0
 80012e8:	0710      	lsls	r0, r2, #28
 80012ea:	460c      	mov	r4, r1
 80012ec:	d458      	bmi.n	80013a0 <__sflush_r+0xc0>
 80012ee:	684b      	ldr	r3, [r1, #4]
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	dc05      	bgt.n	8001300 <__sflush_r+0x20>
 80012f4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	dc02      	bgt.n	8001300 <__sflush_r+0x20>
 80012fa:	2000      	movs	r0, #0
 80012fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001300:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001302:	2e00      	cmp	r6, #0
 8001304:	d0f9      	beq.n	80012fa <__sflush_r+0x1a>
 8001306:	2300      	movs	r3, #0
 8001308:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800130c:	682f      	ldr	r7, [r5, #0]
 800130e:	602b      	str	r3, [r5, #0]
 8001310:	d032      	beq.n	8001378 <__sflush_r+0x98>
 8001312:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001314:	89a3      	ldrh	r3, [r4, #12]
 8001316:	075a      	lsls	r2, r3, #29
 8001318:	d505      	bpl.n	8001326 <__sflush_r+0x46>
 800131a:	6863      	ldr	r3, [r4, #4]
 800131c:	1ac0      	subs	r0, r0, r3
 800131e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001320:	b10b      	cbz	r3, 8001326 <__sflush_r+0x46>
 8001322:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001324:	1ac0      	subs	r0, r0, r3
 8001326:	2300      	movs	r3, #0
 8001328:	4602      	mov	r2, r0
 800132a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800132c:	6a21      	ldr	r1, [r4, #32]
 800132e:	4628      	mov	r0, r5
 8001330:	47b0      	blx	r6
 8001332:	1c43      	adds	r3, r0, #1
 8001334:	89a3      	ldrh	r3, [r4, #12]
 8001336:	d106      	bne.n	8001346 <__sflush_r+0x66>
 8001338:	6829      	ldr	r1, [r5, #0]
 800133a:	291d      	cmp	r1, #29
 800133c:	d82c      	bhi.n	8001398 <__sflush_r+0xb8>
 800133e:	4a2a      	ldr	r2, [pc, #168]	; (80013e8 <__sflush_r+0x108>)
 8001340:	40ca      	lsrs	r2, r1
 8001342:	07d6      	lsls	r6, r2, #31
 8001344:	d528      	bpl.n	8001398 <__sflush_r+0xb8>
 8001346:	2200      	movs	r2, #0
 8001348:	6062      	str	r2, [r4, #4]
 800134a:	04d9      	lsls	r1, r3, #19
 800134c:	6922      	ldr	r2, [r4, #16]
 800134e:	6022      	str	r2, [r4, #0]
 8001350:	d504      	bpl.n	800135c <__sflush_r+0x7c>
 8001352:	1c42      	adds	r2, r0, #1
 8001354:	d101      	bne.n	800135a <__sflush_r+0x7a>
 8001356:	682b      	ldr	r3, [r5, #0]
 8001358:	b903      	cbnz	r3, 800135c <__sflush_r+0x7c>
 800135a:	6560      	str	r0, [r4, #84]	; 0x54
 800135c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800135e:	602f      	str	r7, [r5, #0]
 8001360:	2900      	cmp	r1, #0
 8001362:	d0ca      	beq.n	80012fa <__sflush_r+0x1a>
 8001364:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001368:	4299      	cmp	r1, r3
 800136a:	d002      	beq.n	8001372 <__sflush_r+0x92>
 800136c:	4628      	mov	r0, r5
 800136e:	f000 f90f 	bl	8001590 <_free_r>
 8001372:	2000      	movs	r0, #0
 8001374:	6360      	str	r0, [r4, #52]	; 0x34
 8001376:	e7c1      	b.n	80012fc <__sflush_r+0x1c>
 8001378:	6a21      	ldr	r1, [r4, #32]
 800137a:	2301      	movs	r3, #1
 800137c:	4628      	mov	r0, r5
 800137e:	47b0      	blx	r6
 8001380:	1c41      	adds	r1, r0, #1
 8001382:	d1c7      	bne.n	8001314 <__sflush_r+0x34>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	2b00      	cmp	r3, #0
 8001388:	d0c4      	beq.n	8001314 <__sflush_r+0x34>
 800138a:	2b1d      	cmp	r3, #29
 800138c:	d001      	beq.n	8001392 <__sflush_r+0xb2>
 800138e:	2b16      	cmp	r3, #22
 8001390:	d101      	bne.n	8001396 <__sflush_r+0xb6>
 8001392:	602f      	str	r7, [r5, #0]
 8001394:	e7b1      	b.n	80012fa <__sflush_r+0x1a>
 8001396:	89a3      	ldrh	r3, [r4, #12]
 8001398:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800139c:	81a3      	strh	r3, [r4, #12]
 800139e:	e7ad      	b.n	80012fc <__sflush_r+0x1c>
 80013a0:	690f      	ldr	r7, [r1, #16]
 80013a2:	2f00      	cmp	r7, #0
 80013a4:	d0a9      	beq.n	80012fa <__sflush_r+0x1a>
 80013a6:	0793      	lsls	r3, r2, #30
 80013a8:	680e      	ldr	r6, [r1, #0]
 80013aa:	bf08      	it	eq
 80013ac:	694b      	ldreq	r3, [r1, #20]
 80013ae:	600f      	str	r7, [r1, #0]
 80013b0:	bf18      	it	ne
 80013b2:	2300      	movne	r3, #0
 80013b4:	eba6 0807 	sub.w	r8, r6, r7
 80013b8:	608b      	str	r3, [r1, #8]
 80013ba:	f1b8 0f00 	cmp.w	r8, #0
 80013be:	dd9c      	ble.n	80012fa <__sflush_r+0x1a>
 80013c0:	6a21      	ldr	r1, [r4, #32]
 80013c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80013c4:	4643      	mov	r3, r8
 80013c6:	463a      	mov	r2, r7
 80013c8:	4628      	mov	r0, r5
 80013ca:	47b0      	blx	r6
 80013cc:	2800      	cmp	r0, #0
 80013ce:	dc06      	bgt.n	80013de <__sflush_r+0xfe>
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013d6:	81a3      	strh	r3, [r4, #12]
 80013d8:	f04f 30ff 	mov.w	r0, #4294967295
 80013dc:	e78e      	b.n	80012fc <__sflush_r+0x1c>
 80013de:	4407      	add	r7, r0
 80013e0:	eba8 0800 	sub.w	r8, r8, r0
 80013e4:	e7e9      	b.n	80013ba <__sflush_r+0xda>
 80013e6:	bf00      	nop
 80013e8:	20400001 	.word	0x20400001

080013ec <_fflush_r>:
 80013ec:	b538      	push	{r3, r4, r5, lr}
 80013ee:	690b      	ldr	r3, [r1, #16]
 80013f0:	4605      	mov	r5, r0
 80013f2:	460c      	mov	r4, r1
 80013f4:	b913      	cbnz	r3, 80013fc <_fflush_r+0x10>
 80013f6:	2500      	movs	r5, #0
 80013f8:	4628      	mov	r0, r5
 80013fa:	bd38      	pop	{r3, r4, r5, pc}
 80013fc:	b118      	cbz	r0, 8001406 <_fflush_r+0x1a>
 80013fe:	6983      	ldr	r3, [r0, #24]
 8001400:	b90b      	cbnz	r3, 8001406 <_fflush_r+0x1a>
 8001402:	f7ff f98b 	bl	800071c <__sinit>
 8001406:	4b14      	ldr	r3, [pc, #80]	; (8001458 <_fflush_r+0x6c>)
 8001408:	429c      	cmp	r4, r3
 800140a:	d11b      	bne.n	8001444 <_fflush_r+0x58>
 800140c:	686c      	ldr	r4, [r5, #4]
 800140e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001412:	2b00      	cmp	r3, #0
 8001414:	d0ef      	beq.n	80013f6 <_fflush_r+0xa>
 8001416:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001418:	07d0      	lsls	r0, r2, #31
 800141a:	d404      	bmi.n	8001426 <_fflush_r+0x3a>
 800141c:	0599      	lsls	r1, r3, #22
 800141e:	d402      	bmi.n	8001426 <_fflush_r+0x3a>
 8001420:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001422:	f7ff fa76 	bl	8000912 <__retarget_lock_acquire_recursive>
 8001426:	4628      	mov	r0, r5
 8001428:	4621      	mov	r1, r4
 800142a:	f7ff ff59 	bl	80012e0 <__sflush_r>
 800142e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001430:	07da      	lsls	r2, r3, #31
 8001432:	4605      	mov	r5, r0
 8001434:	d4e0      	bmi.n	80013f8 <_fflush_r+0xc>
 8001436:	89a3      	ldrh	r3, [r4, #12]
 8001438:	059b      	lsls	r3, r3, #22
 800143a:	d4dd      	bmi.n	80013f8 <_fflush_r+0xc>
 800143c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800143e:	f7ff fa69 	bl	8000914 <__retarget_lock_release_recursive>
 8001442:	e7d9      	b.n	80013f8 <_fflush_r+0xc>
 8001444:	4b05      	ldr	r3, [pc, #20]	; (800145c <_fflush_r+0x70>)
 8001446:	429c      	cmp	r4, r3
 8001448:	d101      	bne.n	800144e <_fflush_r+0x62>
 800144a:	68ac      	ldr	r4, [r5, #8]
 800144c:	e7df      	b.n	800140e <_fflush_r+0x22>
 800144e:	4b04      	ldr	r3, [pc, #16]	; (8001460 <_fflush_r+0x74>)
 8001450:	429c      	cmp	r4, r3
 8001452:	bf08      	it	eq
 8001454:	68ec      	ldreq	r4, [r5, #12]
 8001456:	e7da      	b.n	800140e <_fflush_r+0x22>
 8001458:	08001930 	.word	0x08001930
 800145c:	08001950 	.word	0x08001950
 8001460:	08001910 	.word	0x08001910

08001464 <fflush>:
 8001464:	4601      	mov	r1, r0
 8001466:	b920      	cbnz	r0, 8001472 <fflush+0xe>
 8001468:	4b04      	ldr	r3, [pc, #16]	; (800147c <fflush+0x18>)
 800146a:	4905      	ldr	r1, [pc, #20]	; (8001480 <fflush+0x1c>)
 800146c:	6818      	ldr	r0, [r3, #0]
 800146e:	f7ff b9f0 	b.w	8000852 <_fwalk_reent>
 8001472:	4b04      	ldr	r3, [pc, #16]	; (8001484 <fflush+0x20>)
 8001474:	6818      	ldr	r0, [r3, #0]
 8001476:	f7ff bfb9 	b.w	80013ec <_fflush_r>
 800147a:	bf00      	nop
 800147c:	0800190c 	.word	0x0800190c
 8001480:	080013ed 	.word	0x080013ed
 8001484:	20000000 	.word	0x20000000

08001488 <_lseek_r>:
 8001488:	b538      	push	{r3, r4, r5, lr}
 800148a:	4d07      	ldr	r5, [pc, #28]	; (80014a8 <_lseek_r+0x20>)
 800148c:	4604      	mov	r4, r0
 800148e:	4608      	mov	r0, r1
 8001490:	4611      	mov	r1, r2
 8001492:	2200      	movs	r2, #0
 8001494:	602a      	str	r2, [r5, #0]
 8001496:	461a      	mov	r2, r3
 8001498:	f7ff f81e 	bl	80004d8 <_lseek>
 800149c:	1c43      	adds	r3, r0, #1
 800149e:	d102      	bne.n	80014a6 <_lseek_r+0x1e>
 80014a0:	682b      	ldr	r3, [r5, #0]
 80014a2:	b103      	cbz	r3, 80014a6 <_lseek_r+0x1e>
 80014a4:	6023      	str	r3, [r4, #0]
 80014a6:	bd38      	pop	{r3, r4, r5, pc}
 80014a8:	20000090 	.word	0x20000090

080014ac <__swhatbuf_r>:
 80014ac:	b570      	push	{r4, r5, r6, lr}
 80014ae:	460e      	mov	r6, r1
 80014b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014b4:	2900      	cmp	r1, #0
 80014b6:	b096      	sub	sp, #88	; 0x58
 80014b8:	4614      	mov	r4, r2
 80014ba:	461d      	mov	r5, r3
 80014bc:	da08      	bge.n	80014d0 <__swhatbuf_r+0x24>
 80014be:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80014c2:	2200      	movs	r2, #0
 80014c4:	602a      	str	r2, [r5, #0]
 80014c6:	061a      	lsls	r2, r3, #24
 80014c8:	d410      	bmi.n	80014ec <__swhatbuf_r+0x40>
 80014ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014ce:	e00e      	b.n	80014ee <__swhatbuf_r+0x42>
 80014d0:	466a      	mov	r2, sp
 80014d2:	f000 f94f 	bl	8001774 <_fstat_r>
 80014d6:	2800      	cmp	r0, #0
 80014d8:	dbf1      	blt.n	80014be <__swhatbuf_r+0x12>
 80014da:	9a01      	ldr	r2, [sp, #4]
 80014dc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80014e0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80014e4:	425a      	negs	r2, r3
 80014e6:	415a      	adcs	r2, r3
 80014e8:	602a      	str	r2, [r5, #0]
 80014ea:	e7ee      	b.n	80014ca <__swhatbuf_r+0x1e>
 80014ec:	2340      	movs	r3, #64	; 0x40
 80014ee:	2000      	movs	r0, #0
 80014f0:	6023      	str	r3, [r4, #0]
 80014f2:	b016      	add	sp, #88	; 0x58
 80014f4:	bd70      	pop	{r4, r5, r6, pc}
	...

080014f8 <__smakebuf_r>:
 80014f8:	898b      	ldrh	r3, [r1, #12]
 80014fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80014fc:	079d      	lsls	r5, r3, #30
 80014fe:	4606      	mov	r6, r0
 8001500:	460c      	mov	r4, r1
 8001502:	d507      	bpl.n	8001514 <__smakebuf_r+0x1c>
 8001504:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001508:	6023      	str	r3, [r4, #0]
 800150a:	6123      	str	r3, [r4, #16]
 800150c:	2301      	movs	r3, #1
 800150e:	6163      	str	r3, [r4, #20]
 8001510:	b002      	add	sp, #8
 8001512:	bd70      	pop	{r4, r5, r6, pc}
 8001514:	ab01      	add	r3, sp, #4
 8001516:	466a      	mov	r2, sp
 8001518:	f7ff ffc8 	bl	80014ac <__swhatbuf_r>
 800151c:	9900      	ldr	r1, [sp, #0]
 800151e:	4605      	mov	r5, r0
 8001520:	4630      	mov	r0, r6
 8001522:	f7ff fa19 	bl	8000958 <_malloc_r>
 8001526:	b948      	cbnz	r0, 800153c <__smakebuf_r+0x44>
 8001528:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800152c:	059a      	lsls	r2, r3, #22
 800152e:	d4ef      	bmi.n	8001510 <__smakebuf_r+0x18>
 8001530:	f023 0303 	bic.w	r3, r3, #3
 8001534:	f043 0302 	orr.w	r3, r3, #2
 8001538:	81a3      	strh	r3, [r4, #12]
 800153a:	e7e3      	b.n	8001504 <__smakebuf_r+0xc>
 800153c:	4b0d      	ldr	r3, [pc, #52]	; (8001574 <__smakebuf_r+0x7c>)
 800153e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001540:	89a3      	ldrh	r3, [r4, #12]
 8001542:	6020      	str	r0, [r4, #0]
 8001544:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001548:	81a3      	strh	r3, [r4, #12]
 800154a:	9b00      	ldr	r3, [sp, #0]
 800154c:	6163      	str	r3, [r4, #20]
 800154e:	9b01      	ldr	r3, [sp, #4]
 8001550:	6120      	str	r0, [r4, #16]
 8001552:	b15b      	cbz	r3, 800156c <__smakebuf_r+0x74>
 8001554:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001558:	4630      	mov	r0, r6
 800155a:	f000 f91d 	bl	8001798 <_isatty_r>
 800155e:	b128      	cbz	r0, 800156c <__smakebuf_r+0x74>
 8001560:	89a3      	ldrh	r3, [r4, #12]
 8001562:	f023 0303 	bic.w	r3, r3, #3
 8001566:	f043 0301 	orr.w	r3, r3, #1
 800156a:	81a3      	strh	r3, [r4, #12]
 800156c:	89a0      	ldrh	r0, [r4, #12]
 800156e:	4305      	orrs	r5, r0
 8001570:	81a5      	strh	r5, [r4, #12]
 8001572:	e7cd      	b.n	8001510 <__smakebuf_r+0x18>
 8001574:	080006b5 	.word	0x080006b5

08001578 <__malloc_lock>:
 8001578:	4801      	ldr	r0, [pc, #4]	; (8001580 <__malloc_lock+0x8>)
 800157a:	f7ff b9ca 	b.w	8000912 <__retarget_lock_acquire_recursive>
 800157e:	bf00      	nop
 8001580:	20000084 	.word	0x20000084

08001584 <__malloc_unlock>:
 8001584:	4801      	ldr	r0, [pc, #4]	; (800158c <__malloc_unlock+0x8>)
 8001586:	f7ff b9c5 	b.w	8000914 <__retarget_lock_release_recursive>
 800158a:	bf00      	nop
 800158c:	20000084 	.word	0x20000084

08001590 <_free_r>:
 8001590:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001592:	2900      	cmp	r1, #0
 8001594:	d044      	beq.n	8001620 <_free_r+0x90>
 8001596:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800159a:	9001      	str	r0, [sp, #4]
 800159c:	2b00      	cmp	r3, #0
 800159e:	f1a1 0404 	sub.w	r4, r1, #4
 80015a2:	bfb8      	it	lt
 80015a4:	18e4      	addlt	r4, r4, r3
 80015a6:	f7ff ffe7 	bl	8001578 <__malloc_lock>
 80015aa:	4a1e      	ldr	r2, [pc, #120]	; (8001624 <_free_r+0x94>)
 80015ac:	9801      	ldr	r0, [sp, #4]
 80015ae:	6813      	ldr	r3, [r2, #0]
 80015b0:	b933      	cbnz	r3, 80015c0 <_free_r+0x30>
 80015b2:	6063      	str	r3, [r4, #4]
 80015b4:	6014      	str	r4, [r2, #0]
 80015b6:	b003      	add	sp, #12
 80015b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80015bc:	f7ff bfe2 	b.w	8001584 <__malloc_unlock>
 80015c0:	42a3      	cmp	r3, r4
 80015c2:	d908      	bls.n	80015d6 <_free_r+0x46>
 80015c4:	6825      	ldr	r5, [r4, #0]
 80015c6:	1961      	adds	r1, r4, r5
 80015c8:	428b      	cmp	r3, r1
 80015ca:	bf01      	itttt	eq
 80015cc:	6819      	ldreq	r1, [r3, #0]
 80015ce:	685b      	ldreq	r3, [r3, #4]
 80015d0:	1949      	addeq	r1, r1, r5
 80015d2:	6021      	streq	r1, [r4, #0]
 80015d4:	e7ed      	b.n	80015b2 <_free_r+0x22>
 80015d6:	461a      	mov	r2, r3
 80015d8:	685b      	ldr	r3, [r3, #4]
 80015da:	b10b      	cbz	r3, 80015e0 <_free_r+0x50>
 80015dc:	42a3      	cmp	r3, r4
 80015de:	d9fa      	bls.n	80015d6 <_free_r+0x46>
 80015e0:	6811      	ldr	r1, [r2, #0]
 80015e2:	1855      	adds	r5, r2, r1
 80015e4:	42a5      	cmp	r5, r4
 80015e6:	d10b      	bne.n	8001600 <_free_r+0x70>
 80015e8:	6824      	ldr	r4, [r4, #0]
 80015ea:	4421      	add	r1, r4
 80015ec:	1854      	adds	r4, r2, r1
 80015ee:	42a3      	cmp	r3, r4
 80015f0:	6011      	str	r1, [r2, #0]
 80015f2:	d1e0      	bne.n	80015b6 <_free_r+0x26>
 80015f4:	681c      	ldr	r4, [r3, #0]
 80015f6:	685b      	ldr	r3, [r3, #4]
 80015f8:	6053      	str	r3, [r2, #4]
 80015fa:	4421      	add	r1, r4
 80015fc:	6011      	str	r1, [r2, #0]
 80015fe:	e7da      	b.n	80015b6 <_free_r+0x26>
 8001600:	d902      	bls.n	8001608 <_free_r+0x78>
 8001602:	230c      	movs	r3, #12
 8001604:	6003      	str	r3, [r0, #0]
 8001606:	e7d6      	b.n	80015b6 <_free_r+0x26>
 8001608:	6825      	ldr	r5, [r4, #0]
 800160a:	1961      	adds	r1, r4, r5
 800160c:	428b      	cmp	r3, r1
 800160e:	bf04      	itt	eq
 8001610:	6819      	ldreq	r1, [r3, #0]
 8001612:	685b      	ldreq	r3, [r3, #4]
 8001614:	6063      	str	r3, [r4, #4]
 8001616:	bf04      	itt	eq
 8001618:	1949      	addeq	r1, r1, r5
 800161a:	6021      	streq	r1, [r4, #0]
 800161c:	6054      	str	r4, [r2, #4]
 800161e:	e7ca      	b.n	80015b6 <_free_r+0x26>
 8001620:	b003      	add	sp, #12
 8001622:	bd30      	pop	{r4, r5, pc}
 8001624:	20000088 	.word	0x20000088

08001628 <_read_r>:
 8001628:	b538      	push	{r3, r4, r5, lr}
 800162a:	4d07      	ldr	r5, [pc, #28]	; (8001648 <_read_r+0x20>)
 800162c:	4604      	mov	r4, r0
 800162e:	4608      	mov	r0, r1
 8001630:	4611      	mov	r1, r2
 8001632:	2200      	movs	r2, #0
 8001634:	602a      	str	r2, [r5, #0]
 8001636:	461a      	mov	r2, r3
 8001638:	f7fe feee 	bl	8000418 <_read>
 800163c:	1c43      	adds	r3, r0, #1
 800163e:	d102      	bne.n	8001646 <_read_r+0x1e>
 8001640:	682b      	ldr	r3, [r5, #0]
 8001642:	b103      	cbz	r3, 8001646 <_read_r+0x1e>
 8001644:	6023      	str	r3, [r4, #0]
 8001646:	bd38      	pop	{r3, r4, r5, pc}
 8001648:	20000090 	.word	0x20000090

0800164c <lflush>:
 800164c:	8983      	ldrh	r3, [r0, #12]
 800164e:	f003 0309 	and.w	r3, r3, #9
 8001652:	2b09      	cmp	r3, #9
 8001654:	d101      	bne.n	800165a <lflush+0xe>
 8001656:	f7ff bf05 	b.w	8001464 <fflush>
 800165a:	2000      	movs	r0, #0
 800165c:	4770      	bx	lr
	...

08001660 <__srefill_r>:
 8001660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001662:	460c      	mov	r4, r1
 8001664:	4605      	mov	r5, r0
 8001666:	b118      	cbz	r0, 8001670 <__srefill_r+0x10>
 8001668:	6983      	ldr	r3, [r0, #24]
 800166a:	b90b      	cbnz	r3, 8001670 <__srefill_r+0x10>
 800166c:	f7ff f856 	bl	800071c <__sinit>
 8001670:	4b3b      	ldr	r3, [pc, #236]	; (8001760 <__srefill_r+0x100>)
 8001672:	429c      	cmp	r4, r3
 8001674:	d10a      	bne.n	800168c <__srefill_r+0x2c>
 8001676:	686c      	ldr	r4, [r5, #4]
 8001678:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800167c:	2300      	movs	r3, #0
 800167e:	6063      	str	r3, [r4, #4]
 8001680:	89a3      	ldrh	r3, [r4, #12]
 8001682:	069e      	lsls	r6, r3, #26
 8001684:	d50c      	bpl.n	80016a0 <__srefill_r+0x40>
 8001686:	f04f 30ff 	mov.w	r0, #4294967295
 800168a:	e066      	b.n	800175a <__srefill_r+0xfa>
 800168c:	4b35      	ldr	r3, [pc, #212]	; (8001764 <__srefill_r+0x104>)
 800168e:	429c      	cmp	r4, r3
 8001690:	d101      	bne.n	8001696 <__srefill_r+0x36>
 8001692:	68ac      	ldr	r4, [r5, #8]
 8001694:	e7f0      	b.n	8001678 <__srefill_r+0x18>
 8001696:	4b34      	ldr	r3, [pc, #208]	; (8001768 <__srefill_r+0x108>)
 8001698:	429c      	cmp	r4, r3
 800169a:	bf08      	it	eq
 800169c:	68ec      	ldreq	r4, [r5, #12]
 800169e:	e7eb      	b.n	8001678 <__srefill_r+0x18>
 80016a0:	0758      	lsls	r0, r3, #29
 80016a2:	d448      	bmi.n	8001736 <__srefill_r+0xd6>
 80016a4:	06d9      	lsls	r1, r3, #27
 80016a6:	d405      	bmi.n	80016b4 <__srefill_r+0x54>
 80016a8:	2309      	movs	r3, #9
 80016aa:	602b      	str	r3, [r5, #0]
 80016ac:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80016b0:	81a3      	strh	r3, [r4, #12]
 80016b2:	e7e8      	b.n	8001686 <__srefill_r+0x26>
 80016b4:	071a      	lsls	r2, r3, #28
 80016b6:	d50b      	bpl.n	80016d0 <__srefill_r+0x70>
 80016b8:	4621      	mov	r1, r4
 80016ba:	4628      	mov	r0, r5
 80016bc:	f7ff fe96 	bl	80013ec <_fflush_r>
 80016c0:	2800      	cmp	r0, #0
 80016c2:	d1e0      	bne.n	8001686 <__srefill_r+0x26>
 80016c4:	89a3      	ldrh	r3, [r4, #12]
 80016c6:	60a0      	str	r0, [r4, #8]
 80016c8:	f023 0308 	bic.w	r3, r3, #8
 80016cc:	81a3      	strh	r3, [r4, #12]
 80016ce:	61a0      	str	r0, [r4, #24]
 80016d0:	89a3      	ldrh	r3, [r4, #12]
 80016d2:	f043 0304 	orr.w	r3, r3, #4
 80016d6:	81a3      	strh	r3, [r4, #12]
 80016d8:	6923      	ldr	r3, [r4, #16]
 80016da:	b91b      	cbnz	r3, 80016e4 <__srefill_r+0x84>
 80016dc:	4621      	mov	r1, r4
 80016de:	4628      	mov	r0, r5
 80016e0:	f7ff ff0a 	bl	80014f8 <__smakebuf_r>
 80016e4:	89a6      	ldrh	r6, [r4, #12]
 80016e6:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 80016ea:	07b3      	lsls	r3, r6, #30
 80016ec:	d00f      	beq.n	800170e <__srefill_r+0xae>
 80016ee:	2301      	movs	r3, #1
 80016f0:	81a3      	strh	r3, [r4, #12]
 80016f2:	4b1e      	ldr	r3, [pc, #120]	; (800176c <__srefill_r+0x10c>)
 80016f4:	491e      	ldr	r1, [pc, #120]	; (8001770 <__srefill_r+0x110>)
 80016f6:	6818      	ldr	r0, [r3, #0]
 80016f8:	f006 0609 	and.w	r6, r6, #9
 80016fc:	f7ff f88c 	bl	8000818 <_fwalk>
 8001700:	2e09      	cmp	r6, #9
 8001702:	81a7      	strh	r7, [r4, #12]
 8001704:	d103      	bne.n	800170e <__srefill_r+0xae>
 8001706:	4621      	mov	r1, r4
 8001708:	4628      	mov	r0, r5
 800170a:	f7ff fde9 	bl	80012e0 <__sflush_r>
 800170e:	6922      	ldr	r2, [r4, #16]
 8001710:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8001712:	6963      	ldr	r3, [r4, #20]
 8001714:	6a21      	ldr	r1, [r4, #32]
 8001716:	6022      	str	r2, [r4, #0]
 8001718:	4628      	mov	r0, r5
 800171a:	47b0      	blx	r6
 800171c:	2800      	cmp	r0, #0
 800171e:	6060      	str	r0, [r4, #4]
 8001720:	dc1c      	bgt.n	800175c <__srefill_r+0xfc>
 8001722:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001726:	bf17      	itett	ne
 8001728:	2200      	movne	r2, #0
 800172a:	f043 0320 	orreq.w	r3, r3, #32
 800172e:	6062      	strne	r2, [r4, #4]
 8001730:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 8001734:	e7bc      	b.n	80016b0 <__srefill_r+0x50>
 8001736:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001738:	2900      	cmp	r1, #0
 800173a:	d0cd      	beq.n	80016d8 <__srefill_r+0x78>
 800173c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001740:	4299      	cmp	r1, r3
 8001742:	d002      	beq.n	800174a <__srefill_r+0xea>
 8001744:	4628      	mov	r0, r5
 8001746:	f7ff ff23 	bl	8001590 <_free_r>
 800174a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800174c:	6063      	str	r3, [r4, #4]
 800174e:	2000      	movs	r0, #0
 8001750:	6360      	str	r0, [r4, #52]	; 0x34
 8001752:	2b00      	cmp	r3, #0
 8001754:	d0c0      	beq.n	80016d8 <__srefill_r+0x78>
 8001756:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001758:	6023      	str	r3, [r4, #0]
 800175a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800175c:	2000      	movs	r0, #0
 800175e:	e7fc      	b.n	800175a <__srefill_r+0xfa>
 8001760:	08001930 	.word	0x08001930
 8001764:	08001950 	.word	0x08001950
 8001768:	08001910 	.word	0x08001910
 800176c:	0800190c 	.word	0x0800190c
 8001770:	0800164d 	.word	0x0800164d

08001774 <_fstat_r>:
 8001774:	b538      	push	{r3, r4, r5, lr}
 8001776:	4d07      	ldr	r5, [pc, #28]	; (8001794 <_fstat_r+0x20>)
 8001778:	2300      	movs	r3, #0
 800177a:	4604      	mov	r4, r0
 800177c:	4608      	mov	r0, r1
 800177e:	4611      	mov	r1, r2
 8001780:	602b      	str	r3, [r5, #0]
 8001782:	f7fe fe8e 	bl	80004a2 <_fstat>
 8001786:	1c43      	adds	r3, r0, #1
 8001788:	d102      	bne.n	8001790 <_fstat_r+0x1c>
 800178a:	682b      	ldr	r3, [r5, #0]
 800178c:	b103      	cbz	r3, 8001790 <_fstat_r+0x1c>
 800178e:	6023      	str	r3, [r4, #0]
 8001790:	bd38      	pop	{r3, r4, r5, pc}
 8001792:	bf00      	nop
 8001794:	20000090 	.word	0x20000090

08001798 <_isatty_r>:
 8001798:	b538      	push	{r3, r4, r5, lr}
 800179a:	4d06      	ldr	r5, [pc, #24]	; (80017b4 <_isatty_r+0x1c>)
 800179c:	2300      	movs	r3, #0
 800179e:	4604      	mov	r4, r0
 80017a0:	4608      	mov	r0, r1
 80017a2:	602b      	str	r3, [r5, #0]
 80017a4:	f7fe fe8d 	bl	80004c2 <_isatty>
 80017a8:	1c43      	adds	r3, r0, #1
 80017aa:	d102      	bne.n	80017b2 <_isatty_r+0x1a>
 80017ac:	682b      	ldr	r3, [r5, #0]
 80017ae:	b103      	cbz	r3, 80017b2 <_isatty_r+0x1a>
 80017b0:	6023      	str	r3, [r4, #0]
 80017b2:	bd38      	pop	{r3, r4, r5, pc}
 80017b4:	20000090 	.word	0x20000090

080017b8 <_init>:
 80017b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017ba:	bf00      	nop
 80017bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017be:	bc08      	pop	{r3}
 80017c0:	469e      	mov	lr, r3
 80017c2:	4770      	bx	lr

080017c4 <_fini>:
 80017c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017c6:	bf00      	nop
 80017c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017ca:	bc08      	pop	{r3}
 80017cc:	469e      	mov	lr, r3
 80017ce:	4770      	bx	lr
